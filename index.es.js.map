{"version":3,"file":"index.es.js","sources":["../node_modules/@turf/helpers/dist/es/index.js","../node_modules/@turf/invariant/dist/es/index.js","../node_modules/@turf/destination/dist/es/index.js","../node_modules/@turf/circle/dist/es/index.js","../node_modules/@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.js","../node_modules/@turf/distance/dist/es/index.js","../node_modules/@turf/meta/dist/es/index.js","../node_modules/@turf/length/dist/es/index.js","../node_modules/numeral/numeral.js","../src/mode.js","../src/customDrawStyles.js","../src/index.js"],"sourcesContent":["/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\nimport { degreesToRadians, lengthToRadians, point, radiansToDegrees, } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in\n * degrees, radians, miles, or kilometers; and bearing in degrees.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nexport default function destination(origin, distance, bearing, options) {\n    if (options === void 0) { options = {}; }\n    // Handle input\n    var coordinates1 = getCoord(origin);\n    var longitude1 = degreesToRadians(coordinates1[0]);\n    var latitude1 = degreesToRadians(coordinates1[1]);\n    var bearingRad = degreesToRadians(bearing);\n    var radians = lengthToRadians(distance, options.units);\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad));\n    var longitude2 = longitude1 +\n        Math.atan2(Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1), Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = radiansToDegrees(longitude2);\n    var lat = radiansToDegrees(latitude2);\n    return point([lng, lat], options.properties);\n}\n","import destination from \"@turf/destination\";\nimport { polygon, } from \"@turf/helpers\";\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\nfunction circle(center, radius, options) {\n    if (options === void 0) { options = {}; }\n    // default params\n    var steps = options.steps || 64;\n    var properties = options.properties\n        ? options.properties\n        : !Array.isArray(center) && center.type === \"Feature\" && center.properties\n            ? center.properties\n            : {};\n    // main\n    var coordinates = [];\n    for (var i = 0; i < steps; i++) {\n        coordinates.push(destination(center, radius, (i * -360) / steps, options).geometry\n            .coordinates);\n    }\n    coordinates.push(coordinates[0]);\n    return polygon([coordinates], properties);\n}\nexport default circle;\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).MapboxDraw=e()}(this,(function(){\"use strict\";var t=function(t,e){var n={drag:[],click:[],mousemove:[],mousedown:[],mouseup:[],mouseout:[],keydown:[],keyup:[],touchstart:[],touchmove:[],touchend:[],tap:[]},o={on:function(t,e,o){if(void 0===n[t])throw new Error(\"Invalid event type: \"+t);n[t].push({selector:e,fn:o})},render:function(t){e.store.featureChanged(t)}},r=function(t,r){for(var i=n[t],a=i.length;a--;){var s=i[a];if(s.selector(r)){s.fn.call(o,r)||e.store.render(),e.ui.updateMapClasses();break}}};return t.start.call(o),{render:t.render,stop:function(){t.stop&&t.stop()},trash:function(){t.trash&&(t.trash(),e.store.render())},combineFeatures:function(){t.combineFeatures&&t.combineFeatures()},uncombineFeatures:function(){t.uncombineFeatures&&t.uncombineFeatures()},drag:function(t){r(\"drag\",t)},click:function(t){r(\"click\",t)},mousemove:function(t){r(\"mousemove\",t)},mousedown:function(t){r(\"mousedown\",t)},mouseup:function(t){r(\"mouseup\",t)},mouseout:function(t){r(\"mouseout\",t)},keydown:function(t){r(\"keydown\",t)},keyup:function(t){r(\"keyup\",t)},touchstart:function(t){r(\"touchstart\",t)},touchmove:function(t){r(\"touchmove\",t)},touchend:function(t){r(\"touchend\",t)},tap:function(t){r(\"tap\",t)}}};function e(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,\"default\")?t.default:t}function n(t){if(t.__esModule)return t;var e=t.default;if(\"function\"==typeof e){var n=function t(){if(this instanceof t){var n=[null];n.push.apply(n,arguments);var o=Function.bind.apply(e,n);return new o}return e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,\"__esModule\",{value:!0}),Object.keys(t).forEach((function(e){var o=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,o.get?o:{enumerable:!0,get:function(){return t[e]}})})),n}var o={},r={RADIUS:6378137,FLATTENING:1/298.257223563,POLAR_RADIUS:6356752.3142},i=r;function a(t){var e=0;if(t&&t.length>0){e+=Math.abs(s(t[0]));for(var n=1;n<t.length;n++)e-=Math.abs(s(t[n]))}return e}function s(t){var e,n,o,r,a,s,c=0,l=t.length;if(l>2){for(s=0;s<l;s++)s===l-2?(o=l-2,r=l-1,a=0):s===l-1?(o=l-1,r=0,a=1):(o=s,r=s+1,a=s+2),e=t[o],n=t[r],c+=(u(t[a][0])-u(e[0]))*Math.sin(u(n[1]));c=c*i.RADIUS*i.RADIUS/2}return c}function u(t){return t*Math.PI/180}o.geometry=function t(e){var n,o=0;switch(e.type){case\"Polygon\":return a(e.coordinates);case\"MultiPolygon\":for(n=0;n<e.coordinates.length;n++)o+=a(e.coordinates[n]);return o;case\"Point\":case\"MultiPoint\":case\"LineString\":case\"MultiLineString\":return 0;case\"GeometryCollection\":for(n=0;n<e.geometries.length;n++)o+=t(e.geometries[n]);return o}},o.ring=s;var c={CONTROL_BASE:\"mapboxgl-ctrl\",CONTROL_PREFIX:\"mapboxgl-ctrl-\",CONTROL_BUTTON:\"mapbox-gl-draw_ctrl-draw-btn\",CONTROL_BUTTON_LINE:\"mapbox-gl-draw_line\",CONTROL_BUTTON_POLYGON:\"mapbox-gl-draw_polygon\",CONTROL_BUTTON_POINT:\"mapbox-gl-draw_point\",CONTROL_BUTTON_TRASH:\"mapbox-gl-draw_trash\",CONTROL_BUTTON_COMBINE_FEATURES:\"mapbox-gl-draw_combine\",CONTROL_BUTTON_UNCOMBINE_FEATURES:\"mapbox-gl-draw_uncombine\",CONTROL_GROUP:\"mapboxgl-ctrl-group\",ATTRIBUTION:\"mapboxgl-ctrl-attrib\",ACTIVE_BUTTON:\"active\",BOX_SELECT:\"mapbox-gl-draw_boxselect\"},l={HOT:\"mapbox-gl-draw-hot\",COLD:\"mapbox-gl-draw-cold\"},d={ADD:\"add\",MOVE:\"move\",DRAG:\"drag\",POINTER:\"pointer\",NONE:\"none\"},p={POLYGON:\"polygon\",LINE:\"line_string\",POINT:\"point\"},f={FEATURE:\"Feature\",POLYGON:\"Polygon\",LINE_STRING:\"LineString\",POINT:\"Point\",FEATURE_COLLECTION:\"FeatureCollection\",MULTI_PREFIX:\"Multi\",MULTI_POINT:\"MultiPoint\",MULTI_LINE_STRING:\"MultiLineString\",MULTI_POLYGON:\"MultiPolygon\"},h={DRAW_LINE_STRING:\"draw_line_string\",DRAW_POLYGON:\"draw_polygon\",DRAW_POINT:\"draw_point\",SIMPLE_SELECT:\"simple_select\",DIRECT_SELECT:\"direct_select\",STATIC:\"static\"},g={CREATE:\"draw.create\",DELETE:\"draw.delete\",UPDATE:\"draw.update\",SELECTION_CHANGE:\"draw.selectionchange\",MODE_CHANGE:\"draw.modechange\",ACTIONABLE:\"draw.actionable\",RENDER:\"draw.render\",COMBINE_FEATURES:\"draw.combine\",UNCOMBINE_FEATURES:\"draw.uncombine\"},y={MOVE:\"move\",CHANGE_COORDINATES:\"change_coordinates\"},v={FEATURE:\"feature\",MIDPOINT:\"midpoint\",VERTEX:\"vertex\"},m={ACTIVE:\"true\",INACTIVE:\"false\"},_=[\"scrollZoom\",\"boxZoom\",\"dragRotate\",\"dragPan\",\"keyboard\",\"doubleClickZoom\",\"touchZoomRotate\"],b=-85,E=Object.freeze({__proto__:null,classes:c,sources:l,cursors:d,types:p,geojsonTypes:f,modes:h,events:g,updateActions:y,meta:v,activeStates:m,interactions:_,LAT_MIN:-90,LAT_RENDERED_MIN:b,LAT_MAX:90,LAT_RENDERED_MAX:85,LNG_MIN:-270,LNG_MAX:270}),T={Point:0,LineString:1,MultiLineString:1,Polygon:2};function C(t,e){var n=T[t.geometry.type]-T[e.geometry.type];return 0===n&&t.geometry.type===f.POLYGON?t.area-e.area:n}function O(t){return t.map((function(t){return t.geometry.type===f.POLYGON&&(t.area=o.geometry({type:f.FEATURE,property:{},geometry:t.geometry})),t})).sort(C).map((function(t){return delete t.area,t}))}function S(t,e){return void 0===e&&(e=0),[[t.point.x-e,t.point.y-e],[t.point.x+e,t.point.y+e]]}function I(t){if(this._items={},this._nums={},this._length=t?t.length:0,t)for(var e=0,n=t.length;e<n;e++)this.add(t[e]),void 0!==t[e]&&(\"string\"==typeof t[e]?this._items[t[e]]=e:this._nums[t[e]]=e)}I.prototype.add=function(t){return this.has(t)||(this._length++,\"string\"==typeof t?this._items[t]=this._length:this._nums[t]=this._length),this},I.prototype.delete=function(t){return!1===this.has(t)||(this._length--,delete this._items[t],delete this._nums[t]),this},I.prototype.has=function(t){return(\"string\"==typeof t||\"number\"==typeof t)&&(void 0!==this._items[t]||void 0!==this._nums[t])},I.prototype.values=function(){var t=this,e=[];return Object.keys(this._items).forEach((function(n){e.push({k:n,v:t._items[n]})})),Object.keys(this._nums).forEach((function(n){e.push({k:JSON.parse(n),v:t._nums[n]})})),e.sort((function(t,e){return t.v-e.v})).map((function(t){return t.k}))},I.prototype.clear=function(){return this._length=0,this._items={},this._nums={},this};var x=[v.FEATURE,v.MIDPOINT,v.VERTEX],M={click:function(t,e,n){return L(t,e,n,n.options.clickBuffer)},touch:function(t,e,n){return L(t,e,n,n.options.touchBuffer)}};function L(t,e,n,o){if(null===n.map)return[];var r=t?S(t,o):e,i={};n.options.styles&&(i.layers=n.options.styles.map((function(t){return t.id})).filter((function(t){return null!=n.map.getLayer(t)})));var a=n.map.queryRenderedFeatures(r,i).filter((function(t){return-1!==x.indexOf(t.properties.meta)})),s=new I,u=[];return a.forEach((function(t){var e=t.properties.id;s.has(e)||(s.add(e),u.push(t))})),O(u)}function N(t,e){var n=M.click(t,null,e),o={mouse:d.NONE};return n[0]&&(o.mouse=n[0].properties.active===m.ACTIVE?d.MOVE:d.POINTER,o.feature=n[0].properties.meta),-1!==e.events.currentModeName().indexOf(\"draw\")&&(o.mouse=d.ADD),e.ui.queueMapClasses(o),e.ui.updateMapClasses(),n[0]}function A(t,e){var n=t.x-e.x,o=t.y-e.y;return Math.sqrt(n*n+o*o)}function P(t,e,n){void 0===n&&(n={});var o=null!=n.fineTolerance?n.fineTolerance:4,r=null!=n.grossTolerance?n.grossTolerance:12,i=null!=n.interval?n.interval:500;t.point=t.point||e.point,t.time=t.time||e.time;var a=A(t.point,e.point);return a<o||a<r&&e.time-t.time<i}function F(t,e,n){void 0===n&&(n={});var o=null!=n.tolerance?n.tolerance:25,r=null!=n.interval?n.interval:250;return t.point=t.point||e.point,t.time=t.time||e.time,A(t.point,e.point)<o&&e.time-t.time<r}var w={exports:{}},R=w.exports=function(t,e){if(e||(e=16),void 0===t&&(t=128),t<=0)return\"0\";for(var n=Math.log(Math.pow(2,t))/Math.log(e),o=2;n===1/0;o*=2)n=Math.log(Math.pow(2,t/o))/Math.log(e)*o;var r=n-Math.floor(n),i=\"\";for(o=0;o<Math.floor(n);o++){i=Math.floor(Math.random()*e).toString(e)+i}if(r){var a=Math.pow(e,r);i=Math.floor(Math.random()*a).toString(e)+i}var s=parseInt(i,e);return s!==1/0&&s>=Math.pow(2,t)?R(t,e):i};R.rack=function(t,e,n){var o=function(o){var i=0;do{if(i++>10){if(!n)throw new Error(\"too many ID collisions, use more bits\");t+=n}var a=R(t,e)}while(Object.hasOwnProperty.call(r,a));return r[a]=o,a},r=o.hats={};return o.get=function(t){return o.hats[t]},o.set=function(t,e){return o.hats[t]=e,o},o.bits=t||128,o.base=e||16,o};var k=e(w.exports),D=function(t,e){this.ctx=t,this.properties=e.properties||{},this.coordinates=e.geometry.coordinates,this.id=e.id||k(),this.type=e.geometry.type};D.prototype.changed=function(){this.ctx.store.featureChanged(this.id)},D.prototype.incomingCoords=function(t){this.setCoordinates(t)},D.prototype.setCoordinates=function(t){this.coordinates=t,this.changed()},D.prototype.getCoordinates=function(){return JSON.parse(JSON.stringify(this.coordinates))},D.prototype.setProperty=function(t,e){this.properties[t]=e},D.prototype.toGeoJSON=function(){return JSON.parse(JSON.stringify({id:this.id,type:f.FEATURE,properties:this.properties,geometry:{coordinates:this.getCoordinates(),type:this.type}}))},D.prototype.internal=function(t){var e={id:this.id,meta:v.FEATURE,\"meta:type\":this.type,active:m.INACTIVE,mode:t};if(this.ctx.options.userProperties)for(var n in this.properties)e[\"user_\"+n]=this.properties[n];return{type:f.FEATURE,properties:e,geometry:{coordinates:this.getCoordinates(),type:this.type}}};var U=function(t,e){D.call(this,t,e)};(U.prototype=Object.create(D.prototype)).isValid=function(){return\"number\"==typeof this.coordinates[0]&&\"number\"==typeof this.coordinates[1]},U.prototype.updateCoordinate=function(t,e,n){this.coordinates=3===arguments.length?[e,n]:[t,e],this.changed()},U.prototype.getCoordinate=function(){return this.getCoordinates()};var j=function(t,e){D.call(this,t,e)};(j.prototype=Object.create(D.prototype)).isValid=function(){return this.coordinates.length>1},j.prototype.addCoordinate=function(t,e,n){this.changed();var o=parseInt(t,10);this.coordinates.splice(o,0,[e,n])},j.prototype.getCoordinate=function(t){var e=parseInt(t,10);return JSON.parse(JSON.stringify(this.coordinates[e]))},j.prototype.removeCoordinate=function(t){this.changed(),this.coordinates.splice(parseInt(t,10),1)},j.prototype.updateCoordinate=function(t,e,n){var o=parseInt(t,10);this.coordinates[o]=[e,n],this.changed()};var V=function(t,e){D.call(this,t,e),this.coordinates=this.coordinates.map((function(t){return t.slice(0,-1)}))};(V.prototype=Object.create(D.prototype)).isValid=function(){return 0!==this.coordinates.length&&this.coordinates.every((function(t){return t.length>2}))},V.prototype.incomingCoords=function(t){this.coordinates=t.map((function(t){return t.slice(0,-1)})),this.changed()},V.prototype.setCoordinates=function(t){this.coordinates=t,this.changed()},V.prototype.addCoordinate=function(t,e,n){this.changed();var o=t.split(\".\").map((function(t){return parseInt(t,10)}));this.coordinates[o[0]].splice(o[1],0,[e,n])},V.prototype.removeCoordinate=function(t){this.changed();var e=t.split(\".\").map((function(t){return parseInt(t,10)})),n=this.coordinates[e[0]];n&&(n.splice(e[1],1),n.length<3&&this.coordinates.splice(e[0],1))},V.prototype.getCoordinate=function(t){var e=t.split(\".\").map((function(t){return parseInt(t,10)})),n=this.coordinates[e[0]];return JSON.parse(JSON.stringify(n[e[1]]))},V.prototype.getCoordinates=function(){return this.coordinates.map((function(t){return t.concat([t[0]])}))},V.prototype.updateCoordinate=function(t,e,n){this.changed();var o=t.split(\".\"),r=parseInt(o[0],10),i=parseInt(o[1],10);void 0===this.coordinates[r]&&(this.coordinates[r]=[]),this.coordinates[r][i]=[e,n]};var B={MultiPoint:U,MultiLineString:j,MultiPolygon:V},G=function(t,e,n,o,r){var i=n.split(\".\"),a=parseInt(i[0],10),s=i[1]?i.slice(1).join(\".\"):null;return t[a][e](s,o,r)},J=function(t,e){if(D.call(this,t,e),delete this.coordinates,this.model=B[e.geometry.type],void 0===this.model)throw new TypeError(e.geometry.type+\" is not a valid type\");this.features=this._coordinatesToFeatures(e.geometry.coordinates)};function z(t){this.map=t.map,this.drawConfig=JSON.parse(JSON.stringify(t.options||{})),this._ctx=t}(J.prototype=Object.create(D.prototype))._coordinatesToFeatures=function(t){var e=this,n=this.model.bind(this);return t.map((function(t){return new n(e.ctx,{id:k(),type:f.FEATURE,properties:{},geometry:{coordinates:t,type:e.type.replace(\"Multi\",\"\")}})}))},J.prototype.isValid=function(){return this.features.every((function(t){return t.isValid()}))},J.prototype.setCoordinates=function(t){this.features=this._coordinatesToFeatures(t),this.changed()},J.prototype.getCoordinate=function(t){return G(this.features,\"getCoordinate\",t)},J.prototype.getCoordinates=function(){return JSON.parse(JSON.stringify(this.features.map((function(t){return t.type===f.POLYGON?t.getCoordinates():t.coordinates}))))},J.prototype.updateCoordinate=function(t,e,n){G(this.features,\"updateCoordinate\",t,e,n),this.changed()},J.prototype.addCoordinate=function(t,e,n){G(this.features,\"addCoordinate\",t,e,n),this.changed()},J.prototype.removeCoordinate=function(t){G(this.features,\"removeCoordinate\",t),this.changed()},J.prototype.getFeatures=function(){return this.features},z.prototype.setSelected=function(t){return this._ctx.store.setSelected(t)},z.prototype.setSelectedCoordinates=function(t){var e=this;this._ctx.store.setSelectedCoordinates(t),t.reduce((function(t,n){return void 0===t[n.feature_id]&&(t[n.feature_id]=!0,e._ctx.store.get(n.feature_id).changed()),t}),{})},z.prototype.getSelected=function(){return this._ctx.store.getSelected()},z.prototype.getSelectedIds=function(){return this._ctx.store.getSelectedIds()},z.prototype.isSelected=function(t){return this._ctx.store.isSelected(t)},z.prototype.getFeature=function(t){return this._ctx.store.get(t)},z.prototype.select=function(t){return this._ctx.store.select(t)},z.prototype.deselect=function(t){return this._ctx.store.deselect(t)},z.prototype.deleteFeature=function(t,e){return void 0===e&&(e={}),this._ctx.store.delete(t,e)},z.prototype.addFeature=function(t){return this._ctx.store.add(t)},z.prototype.clearSelectedFeatures=function(){return this._ctx.store.clearSelected()},z.prototype.clearSelectedCoordinates=function(){return this._ctx.store.clearSelectedCoordinates()},z.prototype.setActionableState=function(t){void 0===t&&(t={});var e={trash:t.trash||!1,combineFeatures:t.combineFeatures||!1,uncombineFeatures:t.uncombineFeatures||!1};return this._ctx.events.actionable(e)},z.prototype.changeMode=function(t,e,n){return void 0===e&&(e={}),void 0===n&&(n={}),this._ctx.events.changeMode(t,e,n)},z.prototype.updateUIClasses=function(t){return this._ctx.ui.queueMapClasses(t)},z.prototype.activateUIButton=function(t){return this._ctx.ui.setActiveButton(t)},z.prototype.featuresAt=function(t,e,n){if(void 0===n&&(n=\"click\"),\"click\"!==n&&\"touch\"!==n)throw new Error(\"invalid buffer type\");return M[n](t,e,this._ctx)},z.prototype.newFeature=function(t){var e=t.geometry.type;return e===f.POINT?new U(this._ctx,t):e===f.LINE_STRING?new j(this._ctx,t):e===f.POLYGON?new V(this._ctx,t):new J(this._ctx,t)},z.prototype.isInstanceOf=function(t,e){if(t===f.POINT)return e instanceof U;if(t===f.LINE_STRING)return e instanceof j;if(t===f.POLYGON)return e instanceof V;if(\"MultiFeature\"===t)return e instanceof J;throw new Error(\"Unknown feature class: \"+t)},z.prototype.doRender=function(t){return this._ctx.store.featureChanged(t)},z.prototype.onSetup=function(){},z.prototype.onDrag=function(){},z.prototype.onClick=function(){},z.prototype.onMouseMove=function(){},z.prototype.onMouseDown=function(){},z.prototype.onMouseUp=function(){},z.prototype.onMouseOut=function(){},z.prototype.onKeyUp=function(){},z.prototype.onKeyDown=function(){},z.prototype.onTouchStart=function(){},z.prototype.onTouchMove=function(){},z.prototype.onTouchEnd=function(){},z.prototype.onTap=function(){},z.prototype.onStop=function(){},z.prototype.onTrash=function(){},z.prototype.onCombineFeature=function(){},z.prototype.onUncombineFeature=function(){},z.prototype.toDisplayFeatures=function(){throw new Error(\"You must overwrite toDisplayFeatures\")};var Y={drag:\"onDrag\",click:\"onClick\",mousemove:\"onMouseMove\",mousedown:\"onMouseDown\",mouseup:\"onMouseUp\",mouseout:\"onMouseOut\",keyup:\"onKeyUp\",keydown:\"onKeyDown\",touchstart:\"onTouchStart\",touchmove:\"onTouchMove\",touchend:\"onTouchEnd\",tap:\"onTap\"},$=Object.keys(Y);function q(t){var e=Object.keys(t);return function(n,o){void 0===o&&(o={});var r={},i=e.reduce((function(e,n){return e[n]=t[n],e}),new z(n));return{start:function(){var e=this;r=i.onSetup(o),$.forEach((function(n){var o,a=Y[n],s=function(){return!1};t[a]&&(s=function(){return!0}),e.on(n,s,(o=a,function(t){return i[o](r,t)}))}))},stop:function(){i.onStop(r)},trash:function(){i.onTrash(r)},combineFeatures:function(){i.onCombineFeatures(r)},uncombineFeatures:function(){i.onUncombineFeatures(r)},render:function(t,e){i.toDisplayFeatures(r,t,e)}}}}function H(t){return[].concat(t).filter((function(t){return void 0!==t}))}function X(){var t=this;if(!(t.ctx.map&&void 0!==t.ctx.map.getSource(l.HOT)))return u();var e=t.ctx.events.currentModeName();t.ctx.ui.queueMapClasses({mode:e});var n=[],o=[];t.isDirty?o=t.getAllIds():(n=t.getChangedIds().filter((function(e){return void 0!==t.get(e)})),o=t.sources.hot.filter((function(e){return e.properties.id&&-1===n.indexOf(e.properties.id)&&void 0!==t.get(e.properties.id)})).map((function(t){return t.properties.id}))),t.sources.hot=[];var r=t.sources.cold.length;t.sources.cold=t.isDirty?[]:t.sources.cold.filter((function(t){var e=t.properties.id||t.properties.parent;return-1===n.indexOf(e)}));var i=r!==t.sources.cold.length||o.length>0;function a(n,o){var r=t.get(n).internal(e);t.ctx.events.currentModeRender(r,(function(e){t.sources[o].push(e)}))}if(n.forEach((function(t){return a(t,\"hot\")})),o.forEach((function(t){return a(t,\"cold\")})),i&&t.ctx.map.getSource(l.COLD).setData({type:f.FEATURE_COLLECTION,features:t.sources.cold}),t.ctx.map.getSource(l.HOT).setData({type:f.FEATURE_COLLECTION,features:t.sources.hot}),t._emitSelectionChange&&(t.ctx.map.fire(g.SELECTION_CHANGE,{features:t.getSelected().map((function(t){return t.toGeoJSON()})),points:t.getSelectedCoordinates().map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t.coordinates}}}))}),t._emitSelectionChange=!1),t._deletedFeaturesToEmit.length){var s=t._deletedFeaturesToEmit.map((function(t){return t.toGeoJSON()}));t._deletedFeaturesToEmit=[],t.ctx.map.fire(g.DELETE,{features:s})}function u(){t.isDirty=!1,t.clearChangedIds()}u(),t.ctx.map.fire(g.RENDER,{})}function Z(t){var e,n=this;this._features={},this._featureIds=new I,this._selectedFeatureIds=new I,this._selectedCoordinates=[],this._changedFeatureIds=new I,this._deletedFeaturesToEmit=[],this._emitSelectionChange=!1,this._mapInitialConfig={},this.ctx=t,this.sources={hot:[],cold:[]},this.render=function(){e||(e=requestAnimationFrame((function(){e=null,X.call(n)})))},this.isDirty=!1}function W(t,e){var n=t._selectedCoordinates.filter((function(e){return t._selectedFeatureIds.has(e.feature_id)}));t._selectedCoordinates.length===n.length||e.silent||(t._emitSelectionChange=!0),t._selectedCoordinates=n}Z.prototype.createRenderBatch=function(){var t=this,e=this.render,n=0;return this.render=function(){n++},function(){t.render=e,n>0&&t.render()}},Z.prototype.setDirty=function(){return this.isDirty=!0,this},Z.prototype.featureChanged=function(t){return this._changedFeatureIds.add(t),this},Z.prototype.getChangedIds=function(){return this._changedFeatureIds.values()},Z.prototype.clearChangedIds=function(){return this._changedFeatureIds.clear(),this},Z.prototype.getAllIds=function(){return this._featureIds.values()},Z.prototype.add=function(t){return this.featureChanged(t.id),this._features[t.id]=t,this._featureIds.add(t.id),this},Z.prototype.delete=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._featureIds.has(t)&&(n._featureIds.delete(t),n._selectedFeatureIds.delete(t),e.silent||-1===n._deletedFeaturesToEmit.indexOf(n._features[t])&&n._deletedFeaturesToEmit.push(n._features[t]),delete n._features[t],n.isDirty=!0)})),W(this,e),this},Z.prototype.get=function(t){return this._features[t]},Z.prototype.getAll=function(){var t=this;return Object.keys(this._features).map((function(e){return t._features[e]}))},Z.prototype.select=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._selectedFeatureIds.has(t)||(n._selectedFeatureIds.add(t),n._changedFeatureIds.add(t),e.silent||(n._emitSelectionChange=!0))})),this},Z.prototype.deselect=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._selectedFeatureIds.has(t)&&(n._selectedFeatureIds.delete(t),n._changedFeatureIds.add(t),e.silent||(n._emitSelectionChange=!0))})),W(this,e),this},Z.prototype.clearSelected=function(t){return void 0===t&&(t={}),this.deselect(this._selectedFeatureIds.values(),{silent:t.silent}),this},Z.prototype.setSelected=function(t,e){var n=this;return void 0===e&&(e={}),t=H(t),this.deselect(this._selectedFeatureIds.values().filter((function(e){return-1===t.indexOf(e)})),{silent:e.silent}),this.select(t.filter((function(t){return!n._selectedFeatureIds.has(t)})),{silent:e.silent}),this},Z.prototype.setSelectedCoordinates=function(t){return this._selectedCoordinates=t,this._emitSelectionChange=!0,this},Z.prototype.clearSelectedCoordinates=function(){return this._selectedCoordinates=[],this._emitSelectionChange=!0,this},Z.prototype.getSelectedIds=function(){return this._selectedFeatureIds.values()},Z.prototype.getSelected=function(){var t=this;return this._selectedFeatureIds.values().map((function(e){return t.get(e)}))},Z.prototype.getSelectedCoordinates=function(){var t=this;return this._selectedCoordinates.map((function(e){return{coordinates:t.get(e.feature_id).getCoordinate(e.coord_path)}}))},Z.prototype.isSelected=function(t){return this._selectedFeatureIds.has(t)},Z.prototype.setFeatureProperty=function(t,e,n){this.get(t).setProperty(e,n),this.featureChanged(t)},Z.prototype.storeMapConfig=function(){var t=this;_.forEach((function(e){t.ctx.map[e]&&(t._mapInitialConfig[e]=t.ctx.map[e].isEnabled())}))},Z.prototype.restoreMapConfig=function(){var t=this;Object.keys(this._mapInitialConfig).forEach((function(e){t._mapInitialConfig[e]?t.ctx.map[e].enable():t.ctx.map[e].disable()}))},Z.prototype.getInitialConfigValue=function(t){return void 0===this._mapInitialConfig[t]||this._mapInitialConfig[t]};var K=function(){for(var t=arguments,e={},n=0;n<arguments.length;n++){var o=t[n];for(var r in o)Q.call(o,r)&&(e[r]=o[r])}return e},Q=Object.prototype.hasOwnProperty;var tt=e(K),et=[\"mode\",\"feature\",\"mouse\"];function nt(e){var n=null,o=null,r={onRemove:function(){return e.map.off(\"load\",r.connect),clearInterval(o),r.removeLayers(),e.store.restoreMapConfig(),e.ui.removeButtons(),e.events.removeEventListeners(),e.ui.clearMapClasses(),e.boxZoomInitial&&e.map.boxZoom.enable(),e.map=null,e.container=null,e.store=null,n&&n.parentNode&&n.parentNode.removeChild(n),n=null,this},connect:function(){e.map.off(\"load\",r.connect),clearInterval(o),r.addLayers(),e.store.storeMapConfig(),e.events.addEventListeners()},onAdd:function(i){var a=i.fire;return i.fire=function(t,e){var n=arguments;return 1===a.length&&1!==arguments.length&&(n=[tt({},{type:t},e)]),a.apply(i,n)},e.map=i,e.events=function(e){var n=Object.keys(e.options.modes).reduce((function(t,n){return t[n]=q(e.options.modes[n]),t}),{}),o={},r={},i={},a=null,s=null;i.drag=function(t,n){n({point:t.point,time:(new Date).getTime()})?(e.ui.queueMapClasses({mouse:d.DRAG}),s.drag(t)):t.originalEvent.stopPropagation()},i.mousedrag=function(t){i.drag(t,(function(t){return!P(o,t)}))},i.touchdrag=function(t){i.drag(t,(function(t){return!F(r,t)}))},i.mousemove=function(t){if(1===(void 0!==t.originalEvent.buttons?t.originalEvent.buttons:t.originalEvent.which))return i.mousedrag(t);var n=N(t,e);t.featureTarget=n,s.mousemove(t)},i.mousedown=function(t){o={time:(new Date).getTime(),point:t.point};var n=N(t,e);t.featureTarget=n,s.mousedown(t)},i.mouseup=function(t){var n=N(t,e);t.featureTarget=n,P(o,{point:t.point,time:(new Date).getTime()})?s.click(t):s.mouseup(t)},i.mouseout=function(t){s.mouseout(t)},i.touchstart=function(t){if(e.options.touchEnabled){r={time:(new Date).getTime(),point:t.point};var n=M.touch(t,null,e)[0];t.featureTarget=n,s.touchstart(t)}},i.touchmove=function(t){if(e.options.touchEnabled)return s.touchmove(t),i.touchdrag(t)},i.touchend=function(t){if(t.originalEvent.preventDefault(),e.options.touchEnabled){var n=M.touch(t,null,e)[0];t.featureTarget=n,F(r,{time:(new Date).getTime(),point:t.point})?s.tap(t):s.touchend(t)}};var u=function(t){return!(8===t||46===t||t>=48&&t<=57)};function c(o,r,i){void 0===i&&(i={}),s.stop();var u=n[o];if(void 0===u)throw new Error(o+\" is not valid\");a=o;var c=u(e,r);s=t(c,e),i.silent||e.map.fire(g.MODE_CHANGE,{mode:o}),e.store.setDirty(),e.store.render()}i.keydown=function(t){(t.srcElement||t.target).classList.contains(\"mapboxgl-canvas\")&&(8!==t.keyCode&&46!==t.keyCode||!e.options.controls.trash?u(t.keyCode)?s.keydown(t):49===t.keyCode&&e.options.controls.point?c(h.DRAW_POINT):50===t.keyCode&&e.options.controls.line_string?c(h.DRAW_LINE_STRING):51===t.keyCode&&e.options.controls.polygon&&c(h.DRAW_POLYGON):(t.preventDefault(),s.trash()))},i.keyup=function(t){u(t.keyCode)&&s.keyup(t)},i.zoomend=function(){e.store.changeZoom()},i.data=function(t){if(\"style\"===t.dataType){var n=e.setup,o=e.map,r=e.options,i=e.store;r.styles.some((function(t){return o.getLayer(t.id)}))||(n.addLayers(),i.setDirty(),i.render())}};var l={trash:!1,combineFeatures:!1,uncombineFeatures:!1};return{start:function(){a=e.options.defaultMode,s=t(n[a](e),e)},changeMode:c,actionable:function(t){var n=!1;Object.keys(t).forEach((function(e){if(void 0===l[e])throw new Error(\"Invalid action type\");l[e]!==t[e]&&(n=!0),l[e]=t[e]})),n&&e.map.fire(g.ACTIONABLE,{actions:l})},currentModeName:function(){return a},currentModeRender:function(t,e){return s.render(t,e)},fire:function(t,e){i[t]&&i[t](e)},addEventListeners:function(){e.map.on(\"mousemove\",i.mousemove),e.map.on(\"mousedown\",i.mousedown),e.map.on(\"mouseup\",i.mouseup),e.map.on(\"data\",i.data),e.map.on(\"touchmove\",i.touchmove),e.map.on(\"touchstart\",i.touchstart),e.map.on(\"touchend\",i.touchend),e.container.addEventListener(\"mouseout\",i.mouseout),e.options.keybindings&&(e.container.addEventListener(\"keydown\",i.keydown),e.container.addEventListener(\"keyup\",i.keyup))},removeEventListeners:function(){e.map.off(\"mousemove\",i.mousemove),e.map.off(\"mousedown\",i.mousedown),e.map.off(\"mouseup\",i.mouseup),e.map.off(\"data\",i.data),e.map.off(\"touchmove\",i.touchmove),e.map.off(\"touchstart\",i.touchstart),e.map.off(\"touchend\",i.touchend),e.container.removeEventListener(\"mouseout\",i.mouseout),e.options.keybindings&&(e.container.removeEventListener(\"keydown\",i.keydown),e.container.removeEventListener(\"keyup\",i.keyup))},trash:function(t){s.trash(t)},combineFeatures:function(){s.combineFeatures()},uncombineFeatures:function(){s.uncombineFeatures()},getMode:function(){return a}}}(e),e.ui=function(t){var e={},n=null,o={mode:null,feature:null,mouse:null},r={mode:null,feature:null,mouse:null};function i(t){r=tt(r,t)}function a(){var e,n;if(t.container){var i=[],a=[];et.forEach((function(t){r[t]!==o[t]&&(i.push(t+\"-\"+o[t]),null!==r[t]&&a.push(t+\"-\"+r[t]))})),i.length>0&&(e=t.container.classList).remove.apply(e,i),a.length>0&&(n=t.container.classList).add.apply(n,a),o=tt(o,r)}}function s(t,e){void 0===e&&(e={});var o=document.createElement(\"button\");return o.className=c.CONTROL_BUTTON+\" \"+e.className,o.setAttribute(\"title\",e.title),e.container.appendChild(o),o.addEventListener(\"click\",(function(o){if(o.preventDefault(),o.stopPropagation(),o.target===n)return u(),void e.onDeactivate();l(t),e.onActivate()}),!0),o}function u(){n&&(n.classList.remove(c.ACTIVE_BUTTON),n=null)}function l(t){u();var o=e[t];o&&o&&\"trash\"!==t&&(o.classList.add(c.ACTIVE_BUTTON),n=o)}return{setActiveButton:l,queueMapClasses:i,updateMapClasses:a,clearMapClasses:function(){i({mode:null,feature:null,mouse:null}),a()},addButtons:function(){var n=t.options.controls,o=document.createElement(\"div\");return o.className=c.CONTROL_GROUP+\" \"+c.CONTROL_BASE,n?(n[p.LINE]&&(e[p.LINE]=s(p.LINE,{container:o,className:c.CONTROL_BUTTON_LINE,title:\"LineString tool \"+(t.options.keybindings?\"(l)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_LINE_STRING)},onDeactivate:function(){return t.events.trash()}})),n[p.POLYGON]&&(e[p.POLYGON]=s(p.POLYGON,{container:o,className:c.CONTROL_BUTTON_POLYGON,title:\"Polygon tool \"+(t.options.keybindings?\"(p)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_POLYGON)},onDeactivate:function(){return t.events.trash()}})),n[p.POINT]&&(e[p.POINT]=s(p.POINT,{container:o,className:c.CONTROL_BUTTON_POINT,title:\"Marker tool \"+(t.options.keybindings?\"(m)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_POINT)},onDeactivate:function(){return t.events.trash()}})),n.trash&&(e.trash=s(\"trash\",{container:o,className:c.CONTROL_BUTTON_TRASH,title:\"Delete\",onActivate:function(){t.events.trash()}})),n.combine_features&&(e.combine_features=s(\"combineFeatures\",{container:o,className:c.CONTROL_BUTTON_COMBINE_FEATURES,title:\"Combine\",onActivate:function(){t.events.combineFeatures()}})),n.uncombine_features&&(e.uncombine_features=s(\"uncombineFeatures\",{container:o,className:c.CONTROL_BUTTON_UNCOMBINE_FEATURES,title:\"Uncombine\",onActivate:function(){t.events.uncombineFeatures()}})),o):o},removeButtons:function(){Object.keys(e).forEach((function(t){var n=e[t];n.parentNode&&n.parentNode.removeChild(n),delete e[t]}))}}}(e),e.container=i.getContainer(),e.store=new Z(e),n=e.ui.addButtons(),e.options.boxSelect&&(e.boxZoomInitial=i.boxZoom.isEnabled(),i.boxZoom.disable(),i.dragPan.disable(),i.dragPan.enable()),i.loaded()?r.connect():(i.on(\"load\",r.connect),o=setInterval((function(){i.loaded()&&r.connect()}),16)),e.events.start(),n},addLayers:function(){e.map.addSource(l.COLD,{data:{type:f.FEATURE_COLLECTION,features:[]},type:\"geojson\"}),e.map.addSource(l.HOT,{data:{type:f.FEATURE_COLLECTION,features:[]},type:\"geojson\"}),e.options.styles.forEach((function(t){e.map.addLayer(t)})),e.store.setDirty(!0),e.store.render()},removeLayers:function(){e.options.styles.forEach((function(t){e.map.getLayer(t.id)&&e.map.removeLayer(t.id)})),e.map.getSource(l.COLD)&&e.map.removeSource(l.COLD),e.map.getSource(l.HOT)&&e.map.removeSource(l.HOT)}};return e.setup=r,r}var ot=[{id:\"gl-draw-polygon-fill-inactive\",type:\"fill\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Polygon\"],[\"!=\",\"mode\",\"static\"]],paint:{\"fill-color\":\"#3bb2d0\",\"fill-outline-color\":\"#3bb2d0\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-fill-active\",type:\"fill\",filter:[\"all\",[\"==\",\"active\",\"true\"],[\"==\",\"$type\",\"Polygon\"]],paint:{\"fill-color\":\"#fbb03b\",\"fill-outline-color\":\"#fbb03b\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-midpoint\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"midpoint\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-polygon-stroke-inactive\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Polygon\"],[\"!=\",\"mode\",\"static\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#3bb2d0\",\"line-width\":2}},{id:\"gl-draw-polygon-stroke-active\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"true\"],[\"==\",\"$type\",\"Polygon\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#fbb03b\",\"line-dasharray\":[.2,2],\"line-width\":2}},{id:\"gl-draw-line-inactive\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"LineString\"],[\"!=\",\"mode\",\"static\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#3bb2d0\",\"line-width\":2}},{id:\"gl-draw-line-active\",type:\"line\",filter:[\"all\",[\"==\",\"$type\",\"LineString\"],[\"==\",\"active\",\"true\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#fbb03b\",\"line-dasharray\":[.2,2],\"line-width\":2}},{id:\"gl-draw-polygon-and-line-vertex-stroke-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"meta\",\"vertex\"],[\"==\",\"$type\",\"Point\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#fff\"}},{id:\"gl-draw-polygon-and-line-vertex-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"meta\",\"vertex\"],[\"==\",\"$type\",\"Point\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-point-point-stroke-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"feature\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":5,\"circle-opacity\":1,\"circle-color\":\"#fff\"}},{id:\"gl-draw-point-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"feature\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#3bb2d0\"}},{id:\"gl-draw-point-stroke-active\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"==\",\"active\",\"true\"],[\"!=\",\"meta\",\"midpoint\"]],paint:{\"circle-radius\":7,\"circle-color\":\"#fff\"}},{id:\"gl-draw-point-active\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"!=\",\"meta\",\"midpoint\"],[\"==\",\"active\",\"true\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-polygon-fill-static\",type:\"fill\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Polygon\"]],paint:{\"fill-color\":\"#404040\",\"fill-outline-color\":\"#404040\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-stroke-static\",type:\"line\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Polygon\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#404040\",\"line-width\":2}},{id:\"gl-draw-line-static\",type:\"line\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"LineString\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#404040\",\"line-width\":2}},{id:\"gl-draw-point-static\",type:\"circle\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Point\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#404040\"}}];function rt(t){return function(e){var n=e.featureTarget;return!!n&&(!!n.properties&&n.properties.meta===t)}}function it(t){return!!t.originalEvent&&(!!t.originalEvent.shiftKey&&0===t.originalEvent.button)}function at(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===m.ACTIVE&&t.featureTarget.properties.meta===v.FEATURE))}function st(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===m.INACTIVE&&t.featureTarget.properties.meta===v.FEATURE))}function ut(t){return void 0===t.featureTarget}function ct(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&t.featureTarget.properties.meta===v.FEATURE)}function lt(t){var e=t.featureTarget;return!!e&&(!!e.properties&&e.properties.meta===v.VERTEX)}function dt(t){return!!t.originalEvent&&!0===t.originalEvent.shiftKey}function pt(t){return 27===t.keyCode}function ft(t){return 13===t.keyCode}var ht=Object.freeze({__proto__:null,isOfMetaType:rt,isShiftMousedown:it,isActiveFeature:at,isInactiveFeature:st,noTarget:ut,isFeature:ct,isVertex:lt,isShiftDown:dt,isEscapeKey:pt,isEnterKey:ft,isTrue:function(){return!0}}),gt=yt;function yt(t,e){this.x=t,this.y=e}yt.prototype={clone:function(){return new yt(this.x,this.y)},add:function(t){return this.clone()._add(t)},sub:function(t){return this.clone()._sub(t)},multByPoint:function(t){return this.clone()._multByPoint(t)},divByPoint:function(t){return this.clone()._divByPoint(t)},mult:function(t){return this.clone()._mult(t)},div:function(t){return this.clone()._div(t)},rotate:function(t){return this.clone()._rotate(t)},rotateAround:function(t,e){return this.clone()._rotateAround(t,e)},matMult:function(t){return this.clone()._matMult(t)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(t){return this.x===t.x&&this.y===t.y},dist:function(t){return Math.sqrt(this.distSqr(t))},distSqr:function(t){var e=t.x-this.x,n=t.y-this.y;return e*e+n*n},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(t){return Math.atan2(this.y-t.y,this.x-t.x)},angleWith:function(t){return this.angleWithSep(t.x,t.y)},angleWithSep:function(t,e){return Math.atan2(this.x*e-this.y*t,this.x*t+this.y*e)},_matMult:function(t){var e=t[0]*this.x+t[1]*this.y,n=t[2]*this.x+t[3]*this.y;return this.x=e,this.y=n,this},_add:function(t){return this.x+=t.x,this.y+=t.y,this},_sub:function(t){return this.x-=t.x,this.y-=t.y,this},_mult:function(t){return this.x*=t,this.y*=t,this},_div:function(t){return this.x/=t,this.y/=t,this},_multByPoint:function(t){return this.x*=t.x,this.y*=t.y,this},_divByPoint:function(t){return this.x/=t.x,this.y/=t.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){var t=this.y;return this.y=this.x,this.x=-t,this},_rotate:function(t){var e=Math.cos(t),n=Math.sin(t),o=e*this.x-n*this.y,r=n*this.x+e*this.y;return this.x=o,this.y=r,this},_rotateAround:function(t,e){var n=Math.cos(t),o=Math.sin(t),r=e.x+n*(this.x-e.x)-o*(this.y-e.y),i=e.y+o*(this.x-e.x)+n*(this.y-e.y);return this.x=r,this.y=i,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},yt.convert=function(t){return t instanceof yt?t:Array.isArray(t)?new yt(t[0],t[1]):t};var vt=e(gt);function mt(t,e){var n=e.getBoundingClientRect();return new vt(t.clientX-n.left-(e.clientLeft||0),t.clientY-n.top-(e.clientTop||0))}function _t(t,e,n,o){return{type:f.FEATURE,properties:{meta:v.VERTEX,parent:t,coord_path:n,active:o?m.ACTIVE:m.INACTIVE},geometry:{type:f.POINT,coordinates:e}}}function bt(t,e,n){var o=e.geometry.coordinates,r=n.geometry.coordinates;if(o[1]>85||o[1]<b||r[1]>85||r[1]<b)return null;var i={lng:(o[0]+r[0])/2,lat:(o[1]+r[1])/2};return{type:f.FEATURE,properties:{meta:v.MIDPOINT,parent:t,lng:i.lng,lat:i.lat,coord_path:n.properties.coord_path},geometry:{type:f.POINT,coordinates:[i.lng,i.lat]}}}function Et(t,e,n){void 0===e&&(e={}),void 0===n&&(n=null);var o,r=t.geometry,i=r.type,a=r.coordinates,s=t.properties&&t.properties.id,u=[];function c(t,n){var o=\"\",r=null;t.forEach((function(t,i){var a=null!=n?n+\".\"+i:String(i),c=_t(s,t,a,l(a));if(e.midpoints&&r){var d=bt(s,r,c);d&&u.push(d)}r=c;var p=JSON.stringify(t);o!==p&&u.push(c),0===i&&(o=p)}))}function l(t){return!!e.selectedPaths&&-1!==e.selectedPaths.indexOf(t)}return i===f.POINT?u.push(_t(s,a,n,l(n))):i===f.POLYGON?a.forEach((function(t,e){c(t,null!==n?n+\".\"+e:String(e))})):i===f.LINE_STRING?c(a,n):0===i.indexOf(f.MULTI_PREFIX)&&(o=i.replace(f.MULTI_PREFIX,\"\"),a.forEach((function(n,r){var i={type:f.FEATURE,properties:t.properties,geometry:{type:o,coordinates:n}};u=u.concat(Et(i,e,r))}))),u}var Tt={enable:function(t){setTimeout((function(){t.map&&t.map.doubleClickZoom&&t._ctx&&t._ctx.store&&t._ctx.store.getInitialConfigValue&&t._ctx.store.getInitialConfigValue(\"doubleClickZoom\")&&t.map.doubleClickZoom.enable()}),0)},disable:function(t){setTimeout((function(){t.map&&t.map.doubleClickZoom&&t.map.doubleClickZoom.disable()}),0)}},Ct={exports:{}},Ot=function(t){if(!t||!t.type)return null;var e=St[t.type];if(!e)return null;if(\"geometry\"===e)return{type:\"FeatureCollection\",features:[{type:\"Feature\",properties:{},geometry:t}]};if(\"feature\"===e)return{type:\"FeatureCollection\",features:[t]};if(\"featurecollection\"===e)return t},St={Point:\"geometry\",MultiPoint:\"geometry\",LineString:\"geometry\",MultiLineString:\"geometry\",Polygon:\"geometry\",MultiPolygon:\"geometry\",GeometryCollection:\"geometry\",Feature:\"feature\",FeatureCollection:\"featurecollection\"};var It=e(Ot);var xt=Object.freeze({__proto__:null,default:function t(e){switch(e&&e.type||null){case\"FeatureCollection\":return e.features=e.features.reduce((function(e,n){return e.concat(t(n))}),[]),e;case\"Feature\":return e.geometry?t(e.geometry).map((function(t){var n={type:\"Feature\",properties:JSON.parse(JSON.stringify(e.properties)),geometry:t};return void 0!==e.id&&(n.id=e.id),n})):[e];case\"MultiPoint\":return e.coordinates.map((function(t){return{type:\"Point\",coordinates:t}}));case\"MultiPolygon\":return e.coordinates.map((function(t){return{type:\"Polygon\",coordinates:t}}));case\"MultiLineString\":return e.coordinates.map((function(t){return{type:\"LineString\",coordinates:t}}));case\"GeometryCollection\":return e.geometries.map(t).reduce((function(t,e){return t.concat(e)}),[]);case\"Point\":case\"Polygon\":case\"LineString\":return[e]}}}),Mt=Ot,Lt=n(xt),Nt=function(t){return function t(e){if(Array.isArray(e)&&e.length&&\"number\"==typeof e[0])return[e];return e.reduce((function(e,n){return Array.isArray(n)&&Array.isArray(n[0])?e.concat(t(n)):(e.push(n),e)}),[])}(t)};Lt instanceof Function||(Lt=Lt.default);var At={exports:{}},Pt=At.exports=function(t){return new Ft(t)};function Ft(t){this.value=t}function wt(t,e,n){var o=[],r=[],i=!0;return function t(a){var s=n?Rt(a):a,u={},c=!0,l={node:s,node_:a,path:[].concat(o),parent:r[r.length-1],parents:r,key:o.slice(-1)[0],isRoot:0===o.length,level:o.length,circular:null,update:function(t,e){l.isRoot||(l.parent.node[l.key]=t),l.node=t,e&&(c=!1)},delete:function(t){delete l.parent.node[l.key],t&&(c=!1)},remove:function(t){Ut(l.parent.node)?l.parent.node.splice(l.key,1):delete l.parent.node[l.key],t&&(c=!1)},keys:null,before:function(t){u.before=t},after:function(t){u.after=t},pre:function(t){u.pre=t},post:function(t){u.post=t},stop:function(){i=!1},block:function(){c=!1}};if(!i)return l;function d(){if(\"object\"==typeof l.node&&null!==l.node){l.keys&&l.node_===l.node||(l.keys=kt(l.node)),l.isLeaf=0==l.keys.length;for(var t=0;t<r.length;t++)if(r[t].node_===a){l.circular=r[t];break}}else l.isLeaf=!0,l.keys=null;l.notLeaf=!l.isLeaf,l.notRoot=!l.isRoot}d();var p=e.call(l,l.node);return void 0!==p&&l.update&&l.update(p),u.before&&u.before.call(l,l.node),c?(\"object\"!=typeof l.node||null===l.node||l.circular||(r.push(l),d(),jt(l.keys,(function(e,r){o.push(e),u.pre&&u.pre.call(l,l.node[e],e);var i=t(l.node[e]);n&&Vt.call(l.node,e)&&(l.node[e]=i.node),i.isLast=r==l.keys.length-1,i.isFirst=0==r,u.post&&u.post.call(l,i),o.pop()})),r.pop()),u.after&&u.after.call(l,l.node),l):l}(t).node}function Rt(t){if(\"object\"==typeof t&&null!==t){var e;if(Ut(t))e=[];else if(\"[object Date]\"===Dt(t))e=new Date(t.getTime?t.getTime():t);else if(function(t){return\"[object RegExp]\"===Dt(t)}(t))e=new RegExp(t);else if(function(t){return\"[object Error]\"===Dt(t)}(t))e={message:t.message};else if(function(t){return\"[object Boolean]\"===Dt(t)}(t))e=new Boolean(t);else if(function(t){return\"[object Number]\"===Dt(t)}(t))e=new Number(t);else if(function(t){return\"[object String]\"===Dt(t)}(t))e=new String(t);else if(Object.create&&Object.getPrototypeOf)e=Object.create(Object.getPrototypeOf(t));else if(t.constructor===Object)e={};else{var n=t.constructor&&t.constructor.prototype||t.__proto__||{},o=function(){};o.prototype=n,e=new o}return jt(kt(t),(function(n){e[n]=t[n]})),e}return t}Ft.prototype.get=function(t){for(var e=this.value,n=0;n<t.length;n++){var o=t[n];if(!e||!Vt.call(e,o)){e=void 0;break}e=e[o]}return e},Ft.prototype.has=function(t){for(var e=this.value,n=0;n<t.length;n++){var o=t[n];if(!e||!Vt.call(e,o))return!1;e=e[o]}return!0},Ft.prototype.set=function(t,e){for(var n=this.value,o=0;o<t.length-1;o++){var r=t[o];Vt.call(n,r)||(n[r]={}),n=n[r]}return n[t[o]]=e,e},Ft.prototype.map=function(t){return wt(this.value,t,!0)},Ft.prototype.forEach=function(t){return this.value=wt(this.value,t,!1),this.value},Ft.prototype.reduce=function(t,e){var n=1===arguments.length,o=n?this.value:e;return this.forEach((function(e){this.isRoot&&n||(o=t.call(this,o,e))})),o},Ft.prototype.paths=function(){var t=[];return this.forEach((function(e){t.push(this.path)})),t},Ft.prototype.nodes=function(){var t=[];return this.forEach((function(e){t.push(this.node)})),t},Ft.prototype.clone=function(){var t=[],e=[];return function n(o){for(var r=0;r<t.length;r++)if(t[r]===o)return e[r];if(\"object\"==typeof o&&null!==o){var i=Rt(o);return t.push(o),e.push(i),jt(kt(o),(function(t){i[t]=n(o[t])})),t.pop(),e.pop(),i}return o}(this.value)};var kt=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e};function Dt(t){return Object.prototype.toString.call(t)}var Ut=Array.isArray||function(t){return\"[object Array]\"===Object.prototype.toString.call(t)},jt=function(t,e){if(t.forEach)return t.forEach(e);for(var n=0;n<t.length;n++)e(t[n],n,t)};jt(kt(Ft.prototype),(function(t){Pt[t]=function(e){var n=[].slice.call(arguments,1),o=new Ft(e);return o[t].apply(o,n)}}));var Vt=Object.hasOwnProperty||function(t,e){return e in t},Bt=At.exports,Gt=Jt;function Jt(t){if(!(this instanceof Jt))return new Jt(t);this._bbox=t||[1/0,1/0,-1/0,-1/0],this._valid=!!t}Jt.prototype.include=function(t){return this._valid=!0,this._bbox[0]=Math.min(this._bbox[0],t[0]),this._bbox[1]=Math.min(this._bbox[1],t[1]),this._bbox[2]=Math.max(this._bbox[2],t[0]),this._bbox[3]=Math.max(this._bbox[3],t[1]),this},Jt.prototype.equals=function(t){var e;return e=t instanceof Jt?t.bbox():t,this._bbox[0]==e[0]&&this._bbox[1]==e[1]&&this._bbox[2]==e[2]&&this._bbox[3]==e[3]},Jt.prototype.center=function(t){return this._valid?[(this._bbox[0]+this._bbox[2])/2,(this._bbox[1]+this._bbox[3])/2]:null},Jt.prototype.union=function(t){var e;return this._valid=!0,e=t instanceof Jt?t.bbox():t,this._bbox[0]=Math.min(this._bbox[0],e[0]),this._bbox[1]=Math.min(this._bbox[1],e[1]),this._bbox[2]=Math.max(this._bbox[2],e[2]),this._bbox[3]=Math.max(this._bbox[3],e[3]),this},Jt.prototype.bbox=function(){return this._valid?this._bbox:null},Jt.prototype.contains=function(t){if(!t)return this._fastContains();if(!this._valid)return null;var e=t[0],n=t[1];return this._bbox[0]<=e&&this._bbox[1]<=n&&this._bbox[2]>=e&&this._bbox[3]>=n},Jt.prototype.intersect=function(t){return this._valid?(e=t instanceof Jt?t.bbox():t,!(this._bbox[0]>e[2]||this._bbox[2]<e[0]||this._bbox[3]<e[1]||this._bbox[1]>e[3])):null;var e},Jt.prototype._fastContains=function(){if(!this._valid)return new Function(\"return null;\");var t=\"return \"+this._bbox[0]+\"<= ll[0] &&\"+this._bbox[1]+\"<= ll[1] &&\"+this._bbox[2]+\">= ll[0] &&\"+this._bbox[3]+\">= ll[1]\";return new Function(\"ll\",t)},Jt.prototype.polygon=function(){return this._valid?{type:\"Polygon\",coordinates:[[[this._bbox[0],this._bbox[1]],[this._bbox[2],this._bbox[1]],[this._bbox[2],this._bbox[3]],[this._bbox[0],this._bbox[3]],[this._bbox[0],this._bbox[1]]]]}:null};var zt=function(t){if(!t)return[];var e=Lt(Mt(t)),n=[];return e.features.forEach((function(t){t.geometry&&(n=n.concat(Nt(t.geometry.coordinates)))})),n},Yt=Bt,$t=Gt,qt={features:[\"FeatureCollection\"],coordinates:[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],geometry:[\"Feature\"],geometries:[\"GeometryCollection\"]},Ht=Object.keys(qt);function Xt(t){for(var e=$t(),n=zt(t),o=0;o<n.length;o++)e.include(n[o]);return e}Ct.exports=function(t){return Xt(t).bbox()},Ct.exports.polygon=function(t){return Xt(t).polygon()},Ct.exports.bboxify=function(t){return Yt(t).map((function(t){t&&(Ht.some((function(e){return!!t[e]&&-1!==qt[e].indexOf(t.type)}))&&(t.bbox=Xt(t).bbox(),this.update(t)))}))};var Zt=e(Ct.exports),Wt=-90;function Kt(t,e){var n=Wt,o=90,r=Wt,i=90,a=270,s=-270;t.forEach((function(t){var e=Zt(t),u=e[1],c=e[3],l=e[0],d=e[2];u>n&&(n=u),c<o&&(o=c),c>r&&(r=c),u<i&&(i=u),l<a&&(a=l),d>s&&(s=d)}));var u=e;return n+u.lat>85&&(u.lat=85-n),r+u.lat>90&&(u.lat=90-r),o+u.lat<-85&&(u.lat=-85-o),i+u.lat<Wt&&(u.lat=Wt-i),a+u.lng<=-270&&(u.lng+=360*Math.ceil(Math.abs(u.lng)/360)),s+u.lng>=270&&(u.lng-=360*Math.ceil(Math.abs(u.lng)/360)),u}function Qt(t,e){var n=Kt(t.map((function(t){return t.toGeoJSON()})),e);t.forEach((function(t){var e,o=t.getCoordinates(),r=function(t){var e={lng:t[0]+n.lng,lat:t[1]+n.lat};return[e.lng,e.lat]},i=function(t){return t.map((function(t){return r(t)}))};t.type===f.POINT?e=r(o):t.type===f.LINE_STRING||t.type===f.MULTI_POINT?e=o.map(r):t.type===f.POLYGON||t.type===f.MULTI_LINE_STRING?e=o.map(i):t.type===f.MULTI_POLYGON&&(e=o.map((function(t){return t.map((function(t){return i(t)}))}))),t.incomingCoords(e)}))}var te={onSetup:function(t){var e=this,n={dragMoveLocation:null,boxSelectStartLocation:null,boxSelectElement:void 0,boxSelecting:!1,canBoxSelect:!1,dragMoving:!1,canDragMove:!1,initiallySelectedFeatureIds:t.featureIds||[]};return this.setSelected(n.initiallySelectedFeatureIds.filter((function(t){return void 0!==e.getFeature(t)}))),this.fireActionable(),this.setActionableState({combineFeatures:!0,uncombineFeatures:!0,trash:!0}),n},fireUpdate:function(){this.map.fire(g.UPDATE,{action:y.MOVE,features:this.getSelected().map((function(t){return t.toGeoJSON()}))})},fireActionable:function(){var t=this,e=this.getSelected(),n=e.filter((function(e){return t.isInstanceOf(\"MultiFeature\",e)})),o=!1;if(e.length>1){o=!0;var r=e[0].type.replace(\"Multi\",\"\");e.forEach((function(t){t.type.replace(\"Multi\",\"\")!==r&&(o=!1)}))}var i=n.length>0,a=e.length>0;this.setActionableState({combineFeatures:o,uncombineFeatures:i,trash:a})},getUniqueIds:function(t){return t.length?t.map((function(t){return t.properties.id})).filter((function(t){return void 0!==t})).reduce((function(t,e){return t.add(e),t}),new I).values():[]},stopExtendedInteractions:function(t){t.boxSelectElement&&(t.boxSelectElement.parentNode&&t.boxSelectElement.parentNode.removeChild(t.boxSelectElement),t.boxSelectElement=null),this.map.dragPan.enable(),t.boxSelecting=!1,t.canBoxSelect=!1,t.dragMoving=!1,t.canDragMove=!1},onStop:function(){Tt.enable(this)},onMouseMove:function(t,e){return ct(e)&&t.dragMoving&&this.fireUpdate(),this.stopExtendedInteractions(t),!0},onMouseOut:function(t){return!t.dragMoving||this.fireUpdate()}};te.onTap=te.onClick=function(t,e){return ut(e)?this.clickAnywhere(t,e):rt(v.VERTEX)(e)?this.clickOnVertex(t,e):ct(e)?this.clickOnFeature(t,e):void 0},te.clickAnywhere=function(t){var e=this,n=this.getSelectedIds();n.length&&(this.clearSelectedFeatures(),n.forEach((function(t){return e.doRender(t)}))),Tt.enable(this),this.stopExtendedInteractions(t)},te.clickOnVertex=function(t,e){this.changeMode(h.DIRECT_SELECT,{featureId:e.featureTarget.properties.parent,coordPath:e.featureTarget.properties.coord_path,startPos:e.lngLat}),this.updateUIClasses({mouse:d.MOVE})},te.startOnActiveFeature=function(t,e){this.stopExtendedInteractions(t),this.map.dragPan.disable(),this.doRender(e.featureTarget.properties.id),t.canDragMove=!0,t.dragMoveLocation=e.lngLat},te.clickOnFeature=function(t,e){var n=this;Tt.disable(this),this.stopExtendedInteractions(t);var o=dt(e),r=this.getSelectedIds(),i=e.featureTarget.properties.id,a=this.isSelected(i);if(!o&&a&&this.getFeature(i).type!==f.POINT)return this.changeMode(h.DIRECT_SELECT,{featureId:i});a&&o?(this.deselect(i),this.updateUIClasses({mouse:d.POINTER}),1===r.length&&Tt.enable(this)):!a&&o?(this.select(i),this.updateUIClasses({mouse:d.MOVE})):a||o||(r.forEach((function(t){return n.doRender(t)})),this.setSelected(i),this.updateUIClasses({mouse:d.MOVE})),this.doRender(i)},te.onMouseDown=function(t,e){return at(e)?this.startOnActiveFeature(t,e):this.drawConfig.boxSelect&&it(e)?this.startBoxSelect(t,e):void 0},te.startBoxSelect=function(t,e){this.stopExtendedInteractions(t),this.map.dragPan.disable(),t.boxSelectStartLocation=mt(e.originalEvent,this.map.getContainer()),t.canBoxSelect=!0},te.onTouchStart=function(t,e){if(at(e))return this.startOnActiveFeature(t,e)},te.onDrag=function(t,e){return t.canDragMove?this.dragMove(t,e):this.drawConfig.boxSelect&&t.canBoxSelect?this.whileBoxSelect(t,e):void 0},te.whileBoxSelect=function(t,e){t.boxSelecting=!0,this.updateUIClasses({mouse:d.ADD}),t.boxSelectElement||(t.boxSelectElement=document.createElement(\"div\"),t.boxSelectElement.classList.add(c.BOX_SELECT),this.map.getContainer().appendChild(t.boxSelectElement));var n=mt(e.originalEvent,this.map.getContainer()),o=Math.min(t.boxSelectStartLocation.x,n.x),r=Math.max(t.boxSelectStartLocation.x,n.x),i=Math.min(t.boxSelectStartLocation.y,n.y),a=Math.max(t.boxSelectStartLocation.y,n.y),s=\"translate(\"+o+\"px, \"+i+\"px)\";t.boxSelectElement.style.transform=s,t.boxSelectElement.style.WebkitTransform=s,t.boxSelectElement.style.width=r-o+\"px\",t.boxSelectElement.style.height=a-i+\"px\"},te.dragMove=function(t,e){t.dragMoving=!0,e.originalEvent.stopPropagation();var n={lng:e.lngLat.lng-t.dragMoveLocation.lng,lat:e.lngLat.lat-t.dragMoveLocation.lat};Qt(this.getSelected(),n),t.dragMoveLocation=e.lngLat},te.onTouchEnd=te.onMouseUp=function(t,e){var n=this;if(t.dragMoving)this.fireUpdate();else if(t.boxSelecting){var o=[t.boxSelectStartLocation,mt(e.originalEvent,this.map.getContainer())],r=this.featuresAt(null,o,\"click\"),i=this.getUniqueIds(r).filter((function(t){return!n.isSelected(t)}));i.length&&(this.select(i),i.forEach((function(t){return n.doRender(t)})),this.updateUIClasses({mouse:d.MOVE}))}this.stopExtendedInteractions(t)},te.toDisplayFeatures=function(t,e,n){e.properties.active=this.isSelected(e.properties.id)?m.ACTIVE:m.INACTIVE,n(e),this.fireActionable(),e.properties.active===m.ACTIVE&&e.geometry.type!==f.POINT&&Et(e).forEach(n)},te.onTrash=function(){this.deleteFeature(this.getSelectedIds()),this.fireActionable()},te.onCombineFeatures=function(){var t=this.getSelected();if(!(0===t.length||t.length<2)){for(var e=[],n=[],o=t[0].type.replace(\"Multi\",\"\"),r=0;r<t.length;r++){var i=t[r];if(i.type.replace(\"Multi\",\"\")!==o)return;i.type.includes(\"Multi\")?i.getCoordinates().forEach((function(t){e.push(t)})):e.push(i.getCoordinates()),n.push(i.toGeoJSON())}if(n.length>1){var a=this.newFeature({type:f.FEATURE,properties:n[0].properties,geometry:{type:\"Multi\"+o,coordinates:e}});this.addFeature(a),this.deleteFeature(this.getSelectedIds(),{silent:!0}),this.setSelected([a.id]),this.map.fire(g.COMBINE_FEATURES,{createdFeatures:[a.toGeoJSON()],deletedFeatures:n})}this.fireActionable()}},te.onUncombineFeatures=function(){var t=this,e=this.getSelected();if(0!==e.length){for(var n=[],o=[],r=function(r){var i=e[r];t.isInstanceOf(\"MultiFeature\",i)&&(i.getFeatures().forEach((function(e){t.addFeature(e),e.properties=i.properties,n.push(e.toGeoJSON()),t.select([e.id])})),t.deleteFeature(i.id,{silent:!0}),o.push(i.toGeoJSON()))},i=0;i<e.length;i++)r(i);n.length>1&&this.map.fire(g.UNCOMBINE_FEATURES,{createdFeatures:n,deletedFeatures:o}),this.fireActionable()}};var ee=rt(v.VERTEX),ne=rt(v.MIDPOINT),oe={fireUpdate:function(){this.map.fire(g.UPDATE,{action:y.CHANGE_COORDINATES,features:this.getSelected().map((function(t){return t.toGeoJSON()}))})},fireActionable:function(t){this.setActionableState({combineFeatures:!1,uncombineFeatures:!1,trash:t.selectedCoordPaths.length>0})},startDragging:function(t,e){this.map.dragPan.disable(),t.canDragMove=!0,t.dragMoveLocation=e.lngLat},stopDragging:function(t){this.map.dragPan.enable(),t.dragMoving=!1,t.canDragMove=!1,t.dragMoveLocation=null},onVertex:function(t,e){this.startDragging(t,e);var n=e.featureTarget.properties,o=t.selectedCoordPaths.indexOf(n.coord_path);dt(e)||-1!==o?dt(e)&&-1===o&&t.selectedCoordPaths.push(n.coord_path):t.selectedCoordPaths=[n.coord_path];var r=this.pathsToCoordinates(t.featureId,t.selectedCoordPaths);this.setSelectedCoordinates(r)},onMidpoint:function(t,e){this.startDragging(t,e);var n=e.featureTarget.properties;t.feature.addCoordinate(n.coord_path,n.lng,n.lat),this.fireUpdate(),t.selectedCoordPaths=[n.coord_path]},pathsToCoordinates:function(t,e){return e.map((function(e){return{feature_id:t,coord_path:e}}))},onFeature:function(t,e){0===t.selectedCoordPaths.length?this.startDragging(t,e):this.stopDragging(t)},dragFeature:function(t,e,n){Qt(this.getSelected(),n),t.dragMoveLocation=e.lngLat},dragVertex:function(t,e,n){for(var o=t.selectedCoordPaths.map((function(e){return t.feature.getCoordinate(e)})),r=Kt(o.map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t}}})),n),i=0;i<o.length;i++){var a=o[i];t.feature.updateCoordinate(t.selectedCoordPaths[i],a[0]+r.lng,a[1]+r.lat)}},clickNoTarget:function(){this.changeMode(h.SIMPLE_SELECT)},clickInactive:function(){this.changeMode(h.SIMPLE_SELECT)},clickActiveFeature:function(t){t.selectedCoordPaths=[],this.clearSelectedCoordinates(),t.feature.changed()},onSetup:function(t){var e=t.featureId,n=this.getFeature(e);if(!n)throw new Error(\"You must provide a featureId to enter direct_select mode\");if(n.type===f.POINT)throw new TypeError(\"direct_select mode doesn't handle point features\");var o={featureId:e,feature:n,dragMoveLocation:t.startPos||null,dragMoving:!1,canDragMove:!1,selectedCoordPaths:t.coordPath?[t.coordPath]:[]};return this.setSelectedCoordinates(this.pathsToCoordinates(e,o.selectedCoordPaths)),this.setSelected(e),Tt.disable(this),this.setActionableState({trash:!0}),o},onStop:function(){Tt.enable(this),this.clearSelectedCoordinates()},toDisplayFeatures:function(t,e,n){t.featureId===e.properties.id?(e.properties.active=m.ACTIVE,n(e),Et(e,{map:this.map,midpoints:!0,selectedPaths:t.selectedCoordPaths}).forEach(n)):(e.properties.active=m.INACTIVE,n(e)),this.fireActionable(t)},onTrash:function(t){t.selectedCoordPaths.sort((function(t,e){return e.localeCompare(t,\"en\",{numeric:!0})})).forEach((function(e){return t.feature.removeCoordinate(e)})),this.fireUpdate(),t.selectedCoordPaths=[],this.clearSelectedCoordinates(),this.fireActionable(t),!1===t.feature.isValid()&&(this.deleteFeature([t.featureId]),this.changeMode(h.SIMPLE_SELECT,{}))},onMouseMove:function(t,e){var n=at(e),o=ee(e),r=ne(e),i=0===t.selectedCoordPaths.length;return n&&i||o&&!i?this.updateUIClasses({mouse:d.MOVE}):this.updateUIClasses({mouse:d.NONE}),(o||n||r)&&t.dragMoving&&this.fireUpdate(),this.stopDragging(t),!0},onMouseOut:function(t){return t.dragMoving&&this.fireUpdate(),!0}};oe.onTouchStart=oe.onMouseDown=function(t,e){return ee(e)?this.onVertex(t,e):at(e)?this.onFeature(t,e):ne(e)?this.onMidpoint(t,e):void 0},oe.onDrag=function(t,e){if(!0===t.canDragMove){t.dragMoving=!0,e.originalEvent.stopPropagation();var n={lng:e.lngLat.lng-t.dragMoveLocation.lng,lat:e.lngLat.lat-t.dragMoveLocation.lat};t.selectedCoordPaths.length>0?this.dragVertex(t,e,n):this.dragFeature(t,e,n),t.dragMoveLocation=e.lngLat}},oe.onClick=function(t,e){return ut(e)?this.clickNoTarget(t,e):at(e)?this.clickActiveFeature(t,e):st(e)?this.clickInactive(t,e):void this.stopDragging(t)},oe.onTap=function(t,e){return ut(e)?this.clickNoTarget(t,e):at(e)?this.clickActiveFeature(t,e):st(e)?this.clickInactive(t,e):void 0},oe.onTouchEnd=oe.onMouseUp=function(t){t.dragMoving&&this.fireUpdate(),this.stopDragging(t)};var re={};function ie(t,e){return!!t.lngLat&&(t.lngLat.lng===e[0]&&t.lngLat.lat===e[1])}re.onSetup=function(){var t=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:[]}});return this.addFeature(t),this.clearSelectedFeatures(),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.POINT),this.setActionableState({trash:!0}),{point:t}},re.stopDrawingAndRemove=function(t){this.deleteFeature([t.point.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)},re.onTap=re.onClick=function(t,e){this.updateUIClasses({mouse:d.MOVE}),t.point.updateCoordinate(\"\",e.lngLat.lng,e.lngLat.lat),this.map.fire(g.CREATE,{features:[t.point.toGeoJSON()]}),this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.point.id]})},re.onStop=function(t){this.activateUIButton(),t.point.getCoordinate().length||this.deleteFeature([t.point.id],{silent:!0})},re.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.point.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e)},re.onTrash=re.stopDrawingAndRemove,re.onKeyUp=function(t,e){if(pt(e)||ft(e))return this.stopDrawingAndRemove(t,e)};var ae={onSetup:function(){var t=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.POLYGON,coordinates:[[]]}});return this.addFeature(t),this.clearSelectedFeatures(),Tt.disable(this),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.POLYGON),this.setActionableState({trash:!0}),{polygon:t,currentVertexPosition:0}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&ie(e,t.polygon.coordinates[0][t.currentVertexPosition-1]))return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]});this.updateUIClasses({mouse:d.ADD}),t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),t.currentVertexPosition++,t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]})},onMouseMove:function(t,e){t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),lt(e)&&this.updateUIClasses({mouse:d.POINTER})}};ae.onTap=ae.onClick=function(t,e){return lt(e)?this.clickOnVertex(t,e):this.clickAnywhere(t,e)},ae.onKeyUp=function(t,e){pt(e)?(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)):ft(e)&&this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]})},ae.onStop=function(t){this.updateUIClasses({mouse:d.NONE}),Tt.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.polygon.id)&&(t.polygon.removeCoordinate(\"0.\"+t.currentVertexPosition),t.polygon.isValid()?this.map.fire(g.CREATE,{features:[t.polygon.toGeoJSON()]}):(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT,{},{silent:!0})))},ae.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.polygon.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e);if(0!==e.geometry.coordinates.length){var r=e.geometry.coordinates[0].length;if(!(r<3)){if(e.properties.meta=v.FEATURE,n(_t(t.polygon.id,e.geometry.coordinates[0][0],\"0.0\",!1)),r>3){var i=e.geometry.coordinates[0].length-3;n(_t(t.polygon.id,e.geometry.coordinates[0][i],\"0.\"+i,!1))}if(r<=4){var a=[[e.geometry.coordinates[0][0][0],e.geometry.coordinates[0][0][1]],[e.geometry.coordinates[0][1][0],e.geometry.coordinates[0][1][1]]];if(n({type:f.FEATURE,properties:e.properties,geometry:{coordinates:a,type:f.LINE_STRING}}),3===r)return}return n(e)}}},ae.onTrash=function(t){this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)};var se={onSetup:function(t){var e,n,o=(t=t||{}).featureId,r=\"forward\";if(o){if(!(e=this.getFeature(o)))throw new Error(\"Could not find a feature with the provided featureId\");var i=t.from;if(i&&\"Feature\"===i.type&&i.geometry&&\"Point\"===i.geometry.type&&(i=i.geometry),i&&\"Point\"===i.type&&i.coordinates&&2===i.coordinates.length&&(i=i.coordinates),!i||!Array.isArray(i))throw new Error(\"Please use the `from` property to indicate which point to continue the line from\");var a=e.coordinates.length-1;if(e.coordinates[a][0]===i[0]&&e.coordinates[a][1]===i[1])n=a+1,e.addCoordinate.apply(e,[n].concat(e.coordinates[a]));else{if(e.coordinates[0][0]!==i[0]||e.coordinates[0][1]!==i[1])throw new Error(\"`from` should match the point at either the start or the end of the provided LineString\");r=\"backwards\",n=0,e.addCoordinate.apply(e,[n].concat(e.coordinates[0]))}}else e=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.LINE_STRING,coordinates:[]}}),n=0,this.addFeature(e);return this.clearSelectedFeatures(),Tt.disable(this),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.LINE),this.setActionableState({trash:!0}),{line:e,currentVertexPosition:n,direction:r}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&ie(e,t.line.coordinates[t.currentVertexPosition-1])||\"backwards\"===t.direction&&ie(e,t.line.coordinates[t.currentVertexPosition+1]))return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]});this.updateUIClasses({mouse:d.ADD}),t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),\"forward\"===t.direction?(t.currentVertexPosition++,t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)):t.line.addCoordinate(0,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]})},onMouseMove:function(t,e){t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),lt(e)&&this.updateUIClasses({mouse:d.POINTER})}};se.onTap=se.onClick=function(t,e){if(lt(e))return this.clickOnVertex(t,e);this.clickAnywhere(t,e)},se.onKeyUp=function(t,e){ft(e)?this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]}):pt(e)&&(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT))},se.onStop=function(t){Tt.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.line.id)&&(t.line.removeCoordinate(\"\"+t.currentVertexPosition),t.line.isValid()?this.map.fire(g.CREATE,{features:[t.line.toGeoJSON()]}):(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT,{},{silent:!0})))},se.onTrash=function(t){this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)},se.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.line.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e);e.geometry.coordinates.length<2||(e.properties.meta=v.FEATURE,n(_t(t.line.id,e.geometry.coordinates[\"forward\"===t.direction?e.geometry.coordinates.length-2:1],\"\"+(\"forward\"===t.direction?e.geometry.coordinates.length-2:1),!1)),n(e))};var ue={simple_select:te,direct_select:oe,draw_point:re,draw_polygon:ae,draw_line_string:se},ce={defaultMode:h.SIMPLE_SELECT,keybindings:!0,touchEnabled:!0,clickBuffer:2,touchBuffer:25,boxSelect:!0,displayControlsDefault:!0,styles:ot,modes:ue,controls:{},userProperties:!1},le={point:!0,line_string:!0,polygon:!0,trash:!0,combine_features:!0,uncombine_features:!0},de={point:!1,line_string:!1,polygon:!1,trash:!1,combine_features:!1,uncombine_features:!1};function pe(t,e){return t.map((function(t){return t.source?t:tt(t,{id:t.id+\".\"+e,source:\"hot\"===e?l.HOT:l.COLD})}))}var fe={exports:{}};!function(t,e){var n=\"__lodash_hash_undefined__\",o=9007199254740991,r=\"[object Arguments]\",i=\"[object Array]\",a=\"[object Boolean]\",s=\"[object Date]\",u=\"[object Error]\",c=\"[object Function]\",l=\"[object Map]\",d=\"[object Number]\",p=\"[object Object]\",f=\"[object Promise]\",h=\"[object RegExp]\",g=\"[object Set]\",y=\"[object String]\",v=\"[object Symbol]\",m=\"[object WeakMap]\",_=\"[object ArrayBuffer]\",b=\"[object DataView]\",E=/^\\[object .+?Constructor\\]$/,T=/^(?:0|[1-9]\\d*)$/,C={};C[\"[object Float32Array]\"]=C[\"[object Float64Array]\"]=C[\"[object Int8Array]\"]=C[\"[object Int16Array]\"]=C[\"[object Int32Array]\"]=C[\"[object Uint8Array]\"]=C[\"[object Uint8ClampedArray]\"]=C[\"[object Uint16Array]\"]=C[\"[object Uint32Array]\"]=!0,C[r]=C[i]=C[_]=C[a]=C[b]=C[s]=C[u]=C[c]=C[l]=C[d]=C[p]=C[h]=C[g]=C[y]=C[m]=!1;var O=\"object\"==typeof global&&global&&global.Object===Object&&global,S=\"object\"==typeof self&&self&&self.Object===Object&&self,I=O||S||Function(\"return this\")(),x=e&&!e.nodeType&&e,M=x&&t&&!t.nodeType&&t,L=M&&M.exports===x,N=L&&O.process,A=function(){try{return N&&N.binding&&N.binding(\"util\")}catch(t){}}(),P=A&&A.isTypedArray;function F(t,e){for(var n=-1,o=null==t?0:t.length;++n<o;)if(e(t[n],n,t))return!0;return!1}function w(t){var e=-1,n=Array(t.size);return t.forEach((function(t,o){n[++e]=[o,t]})),n}function R(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}var k,D,U,j=Array.prototype,V=Function.prototype,B=Object.prototype,G=I[\"__core-js_shared__\"],J=V.toString,z=B.hasOwnProperty,Y=(k=/[^.]+$/.exec(G&&G.keys&&G.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+k:\"\",$=B.toString,q=RegExp(\"^\"+J.call(z).replace(/[\\\\^$.*+?()[\\]{}|]/g,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),H=L?I.Buffer:void 0,X=I.Symbol,Z=I.Uint8Array,W=B.propertyIsEnumerable,K=j.splice,Q=X?X.toStringTag:void 0,tt=Object.getOwnPropertySymbols,et=H?H.isBuffer:void 0,nt=(D=Object.keys,U=Object,function(t){return D(U(t))}),ot=At(I,\"DataView\"),rt=At(I,\"Map\"),it=At(I,\"Promise\"),at=At(I,\"Set\"),st=At(I,\"WeakMap\"),ut=At(Object,\"create\"),ct=Rt(ot),lt=Rt(rt),dt=Rt(it),pt=Rt(at),ft=Rt(st),ht=X?X.prototype:void 0,gt=ht?ht.valueOf:void 0;function yt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function vt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function mt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function _t(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new mt;++e<n;)this.add(t[e])}function bt(t){var e=this.__data__=new vt(t);this.size=e.size}function Et(t,e){var n=Ut(t),o=!n&&Dt(t),r=!n&&!o&&jt(t),i=!n&&!o&&!r&&zt(t),a=n||o||r||i,s=a?function(t,e){for(var n=-1,o=Array(t);++n<t;)o[n]=e(n);return o}(t.length,String):[],u=s.length;for(var c in t)!e&&!z.call(t,c)||a&&(\"length\"==c||r&&(\"offset\"==c||\"parent\"==c)||i&&(\"buffer\"==c||\"byteLength\"==c||\"byteOffset\"==c)||wt(c,u))||s.push(c);return s}function Tt(t,e){for(var n=t.length;n--;)if(kt(t[n][0],e))return n;return-1}function Ct(t){return null==t?void 0===t?\"[object Undefined]\":\"[object Null]\":Q&&Q in Object(t)?function(t){var e=z.call(t,Q),n=t[Q];try{t[Q]=void 0;var o=!0}catch(t){}var r=$.call(t);o&&(e?t[Q]=n:delete t[Q]);return r}(t):function(t){return $.call(t)}(t)}function Ot(t){return Jt(t)&&Ct(t)==r}function St(t,e,n,o,c){return t===e||(null==t||null==e||!Jt(t)&&!Jt(e)?t!=t&&e!=e:function(t,e,n,o,c,f){var m=Ut(t),E=Ut(e),T=m?i:Ft(t),C=E?i:Ft(e),O=(T=T==r?p:T)==p,S=(C=C==r?p:C)==p,I=T==C;if(I&&jt(t)){if(!jt(e))return!1;m=!0,O=!1}if(I&&!O)return f||(f=new bt),m||zt(t)?Mt(t,e,n,o,c,f):function(t,e,n,o,r,i,c){switch(n){case b:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case _:return!(t.byteLength!=e.byteLength||!i(new Z(t),new Z(e)));case a:case s:case d:return kt(+t,+e);case u:return t.name==e.name&&t.message==e.message;case h:case y:return t==e+\"\";case l:var p=w;case g:var f=1&o;if(p||(p=R),t.size!=e.size&&!f)return!1;var m=c.get(t);if(m)return m==e;o|=2,c.set(t,e);var E=Mt(p(t),p(e),o,r,i,c);return c.delete(t),E;case v:if(gt)return gt.call(t)==gt.call(e)}return!1}(t,e,T,n,o,c,f);if(!(1&n)){var x=O&&z.call(t,\"__wrapped__\"),M=S&&z.call(e,\"__wrapped__\");if(x||M){var L=x?t.value():t,N=M?e.value():e;return f||(f=new bt),c(L,N,n,o,f)}}if(!I)return!1;return f||(f=new bt),function(t,e,n,o,r,i){var a=1&n,s=Lt(t),u=s.length,c=Lt(e).length;if(u!=c&&!a)return!1;var l=u;for(;l--;){var d=s[l];if(!(a?d in e:z.call(e,d)))return!1}var p=i.get(t);if(p&&i.get(e))return p==e;var f=!0;i.set(t,e),i.set(e,t);var h=a;for(;++l<u;){var g=t[d=s[l]],y=e[d];if(o)var v=a?o(y,g,d,e,t,i):o(g,y,d,t,e,i);if(!(void 0===v?g===y||r(g,y,n,o,i):v)){f=!1;break}h||(h=\"constructor\"==d)}if(f&&!h){var m=t.constructor,_=e.constructor;m==_||!(\"constructor\"in t)||!(\"constructor\"in e)||\"function\"==typeof m&&m instanceof m&&\"function\"==typeof _&&_ instanceof _||(f=!1)}return i.delete(t),i.delete(e),f}(t,e,n,o,c,f)}(t,e,n,o,St,c))}function It(t){return!(!Gt(t)||function(t){return!!Y&&Y in t}(t))&&(Vt(t)?q:E).test(Rt(t))}function xt(t){if(n=(e=t)&&e.constructor,o=\"function\"==typeof n&&n.prototype||B,e!==o)return nt(t);var e,n,o,r=[];for(var i in Object(t))z.call(t,i)&&\"constructor\"!=i&&r.push(i);return r}function Mt(t,e,n,o,r,i){var a=1&n,s=t.length,u=e.length;if(s!=u&&!(a&&u>s))return!1;var c=i.get(t);if(c&&i.get(e))return c==e;var l=-1,d=!0,p=2&n?new _t:void 0;for(i.set(t,e),i.set(e,t);++l<s;){var f=t[l],h=e[l];if(o)var g=a?o(h,f,l,e,t,i):o(f,h,l,t,e,i);if(void 0!==g){if(g)continue;d=!1;break}if(p){if(!F(e,(function(t,e){if(a=e,!p.has(a)&&(f===t||r(f,t,n,o,i)))return p.push(e);var a}))){d=!1;break}}else if(f!==h&&!r(f,h,n,o,i)){d=!1;break}}return i.delete(t),i.delete(e),d}function Lt(t){return function(t,e,n){var o=e(t);return Ut(t)?o:function(t,e){for(var n=-1,o=e.length,r=t.length;++n<o;)t[r+n]=e[n];return t}(o,n(t))}(t,Yt,Pt)}function Nt(t,e){var n,o,r=t.__data__;return(\"string\"==(o=typeof(n=e))||\"number\"==o||\"symbol\"==o||\"boolean\"==o?\"__proto__\"!==n:null===n)?r[\"string\"==typeof e?\"string\":\"hash\"]:r.map}function At(t,e){var n=function(t,e){return null==t?void 0:t[e]}(t,e);return It(n)?n:void 0}yt.prototype.clear=function(){this.__data__=ut?ut(null):{},this.size=0},yt.prototype.delete=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e},yt.prototype.get=function(t){var e=this.__data__;if(ut){var o=e[t];return o===n?void 0:o}return z.call(e,t)?e[t]:void 0},yt.prototype.has=function(t){var e=this.__data__;return ut?void 0!==e[t]:z.call(e,t)},yt.prototype.set=function(t,e){var o=this.__data__;return this.size+=this.has(t)?0:1,o[t]=ut&&void 0===e?n:e,this},vt.prototype.clear=function(){this.__data__=[],this.size=0},vt.prototype.delete=function(t){var e=this.__data__,n=Tt(e,t);return!(n<0)&&(n==e.length-1?e.pop():K.call(e,n,1),--this.size,!0)},vt.prototype.get=function(t){var e=this.__data__,n=Tt(e,t);return n<0?void 0:e[n][1]},vt.prototype.has=function(t){return Tt(this.__data__,t)>-1},vt.prototype.set=function(t,e){var n=this.__data__,o=Tt(n,t);return o<0?(++this.size,n.push([t,e])):n[o][1]=e,this},mt.prototype.clear=function(){this.size=0,this.__data__={hash:new yt,map:new(rt||vt),string:new yt}},mt.prototype.delete=function(t){var e=Nt(this,t).delete(t);return this.size-=e?1:0,e},mt.prototype.get=function(t){return Nt(this,t).get(t)},mt.prototype.has=function(t){return Nt(this,t).has(t)},mt.prototype.set=function(t,e){var n=Nt(this,t),o=n.size;return n.set(t,e),this.size+=n.size==o?0:1,this},_t.prototype.add=_t.prototype.push=function(t){return this.__data__.set(t,n),this},_t.prototype.has=function(t){return this.__data__.has(t)},bt.prototype.clear=function(){this.__data__=new vt,this.size=0},bt.prototype.delete=function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n},bt.prototype.get=function(t){return this.__data__.get(t)},bt.prototype.has=function(t){return this.__data__.has(t)},bt.prototype.set=function(t,e){var n=this.__data__;if(n instanceof vt){var o=n.__data__;if(!rt||o.length<199)return o.push([t,e]),this.size=++n.size,this;n=this.__data__=new mt(o)}return n.set(t,e),this.size=n.size,this};var Pt=tt?function(t){return null==t?[]:(t=Object(t),function(t,e){for(var n=-1,o=null==t?0:t.length,r=0,i=[];++n<o;){var a=t[n];e(a,n,t)&&(i[r++]=a)}return i}(tt(t),(function(e){return W.call(t,e)})))}:function(){return[]},Ft=Ct;function wt(t,e){return!!(e=null==e?o:e)&&(\"number\"==typeof t||T.test(t))&&t>-1&&t%1==0&&t<e}function Rt(t){if(null!=t){try{return J.call(t)}catch(t){}try{return t+\"\"}catch(t){}}return\"\"}function kt(t,e){return t===e||t!=t&&e!=e}(ot&&Ft(new ot(new ArrayBuffer(1)))!=b||rt&&Ft(new rt)!=l||it&&Ft(it.resolve())!=f||at&&Ft(new at)!=g||st&&Ft(new st)!=m)&&(Ft=function(t){var e=Ct(t),n=e==p?t.constructor:void 0,o=n?Rt(n):\"\";if(o)switch(o){case ct:return b;case lt:return l;case dt:return f;case pt:return g;case ft:return m}return e});var Dt=Ot(function(){return arguments}())?Ot:function(t){return Jt(t)&&z.call(t,\"callee\")&&!W.call(t,\"callee\")},Ut=Array.isArray;var jt=et||function(){return!1};function Vt(t){if(!Gt(t))return!1;var e=Ct(t);return e==c||\"[object GeneratorFunction]\"==e||\"[object AsyncFunction]\"==e||\"[object Proxy]\"==e}function Bt(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=o}function Gt(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)}function Jt(t){return null!=t&&\"object\"==typeof t}var zt=P?function(t){return function(e){return t(e)}}(P):function(t){return Jt(t)&&Bt(t.length)&&!!C[Ct(t)]};function Yt(t){return null!=(e=t)&&Bt(e.length)&&!Vt(e)?Et(t):xt(t);var e}t.exports=function(t,e){return St(t,e)}}(fe,fe.exports);var he=e(fe.exports);function ge(t,e){return t.length===e.length&&JSON.stringify(t.map((function(t){return t})).sort())===JSON.stringify(e.map((function(t){return t})).sort())}var ye={Polygon:V,LineString:j,Point:U,MultiPolygon:J,MultiLineString:J,MultiPoint:J};var ve=Object.freeze({__proto__:null,CommonSelectors:ht,constrainFeatureMovement:Kt,createMidPoint:bt,createSupplementaryPoints:Et,createVertex:_t,doubleClickZoom:Tt,euclideanDistance:A,featuresAt:M,getFeatureAtAndSetCursors:N,isClick:P,isEventAtCoordinates:ie,isTap:F,mapEventToBoundingBox:S,ModeHandler:t,moveFeatures:Qt,sortFeatures:O,stringSetsAreEqual:ge,StringSet:I,theme:ot,toDenseArray:H}),me=function(t,e){var n={options:t=function(t){void 0===t&&(t={});var e=tt(t);return t.controls||(e.controls={}),!1===t.displayControlsDefault?e.controls=tt(de,t.controls):e.controls=tt(le,t.controls),(e=tt(ce,e)).styles=pe(e.styles,\"cold\").concat(pe(e.styles,\"hot\")),e}(t)};e=function(t,e){return e.modes=h,e.getFeatureIdsAt=function(e){return M.click({point:e},null,t).map((function(t){return t.properties.id}))},e.getSelectedIds=function(){return t.store.getSelectedIds()},e.getSelected=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getSelectedIds().map((function(e){return t.store.get(e)})).map((function(t){return t.toGeoJSON()}))}},e.getSelectedPoints=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getSelectedCoordinates().map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t.coordinates}}}))}},e.set=function(n){if(void 0===n.type||n.type!==f.FEATURE_COLLECTION||!Array.isArray(n.features))throw new Error(\"Invalid FeatureCollection\");var o=t.store.createRenderBatch(),r=t.store.getAllIds().slice(),i=e.add(n),a=new I(i);return(r=r.filter((function(t){return!a.has(t)}))).length&&e.delete(r),o(),i},e.add=function(e){var n=JSON.parse(JSON.stringify(It(e))).features.map((function(e){if(e.id=e.id||k(),null===e.geometry)throw new Error(\"Invalid geometry: null\");if(void 0===t.store.get(e.id)||t.store.get(e.id).type!==e.geometry.type){var n=ye[e.geometry.type];if(void 0===n)throw new Error(\"Invalid geometry type: \"+e.geometry.type+\".\");var o=new n(t,e);t.store.add(o)}else{var r=t.store.get(e.id);r.properties=e.properties,he(r.properties,e.properties)||t.store.featureChanged(r.id),he(r.getCoordinates(),e.geometry.coordinates)||r.incomingCoords(e.geometry.coordinates)}return e.id}));return t.store.render(),n},e.get=function(e){var n=t.store.get(e);if(n)return n.toGeoJSON()},e.getAll=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getAll().map((function(t){return t.toGeoJSON()}))}},e.delete=function(n){return t.store.delete(n,{silent:!0}),e.getMode()!==h.DIRECT_SELECT||t.store.getSelectedIds().length?t.store.render():t.events.changeMode(h.SIMPLE_SELECT,void 0,{silent:!0}),e},e.deleteAll=function(){return t.store.delete(t.store.getAllIds(),{silent:!0}),e.getMode()===h.DIRECT_SELECT?t.events.changeMode(h.SIMPLE_SELECT,void 0,{silent:!0}):t.store.render(),e},e.changeMode=function(n,o){return void 0===o&&(o={}),n===h.SIMPLE_SELECT&&e.getMode()===h.SIMPLE_SELECT?(ge(o.featureIds||[],t.store.getSelectedIds())||(t.store.setSelected(o.featureIds,{silent:!0}),t.store.render()),e):(n===h.DIRECT_SELECT&&e.getMode()===h.DIRECT_SELECT&&o.featureId===t.store.getSelectedIds()[0]||t.events.changeMode(n,o,{silent:!0}),e)},e.getMode=function(){return t.events.getMode()},e.trash=function(){return t.events.trash({silent:!0}),e},e.combineFeatures=function(){return t.events.combineFeatures({silent:!0}),e},e.uncombineFeatures=function(){return t.events.uncombineFeatures({silent:!0}),e},e.setFeatureProperty=function(n,o,r){return t.store.setFeatureProperty(n,o,r),e},e}(n,e),n.api=e;var o=nt(n);return e.onAdd=o.onAdd,e.onRemove=o.onRemove,e.types=p,e.options=t,e};function _e(t){me(t,this)}return _e.modes=ue,_e.constants=E,_e.lib=ve,_e}));\n//# sourceMappingURL=mapbox-gl-draw.js.map\n","import { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians, } from \"@turf/helpers\";\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexport default distance;\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import distance from \"@turf/distance\";\nimport { segmentReduce } from \"@turf/meta\";\n/**\n * Takes a {@link GeoJSON} and measures its length in the specified units, {@link (Multi)Point}'s distance are ignored.\n *\n * @name length\n * @param {Feature<LineString|MultiLineString>} geojson GeoJSON to measure\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=kilometers] can be degrees, radians, miles, or kilometers\n * @returns {number} length of GeoJSON\n * @example\n * var line = turf.lineString([[115, -32], [131, -22], [143, -25], [150, -34]]);\n * var length = turf.length(line, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line];\n * line.properties.distance = length;\n */\nexport default function length(geojson, options) {\n    if (options === void 0) { options = {}; }\n    // Calculate distance from 2-vertex line segments\n    return segmentReduce(geojson, function (previousValue, segment) {\n        var coords = segment.geometry.coordinates;\n        return previousValue + distance(coords[0], coords[1], options);\n    }, 0);\n}\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n","// custom mapbopx-gl-draw mode that extends draw_line_string\n// shows a center point, radius line, and circle polygon while drawing\n// forces draw.create on creation of second vertex\nimport circle from \"@turf/circle\";\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport turfLength from  \"@turf/length\";\nimport numeral from \"numeral\";\n\nfunction getDisplayMeasurements(feature) {\n  // should log both metric and standard display strings for the current drawn feature\n\n  // metric calculation\n  const drawnLength = turfLength(feature) * 1000; // meters\n\n  let metricUnits = \"m\";\n  let metricFormat = \"0,0\";\n  let metricMeasurement;\n\n  let standardUnits = \"ft\";\n  let standardFormat = \"0,0\";\n  let standardMeasurement;\n\n  metricMeasurement = drawnLength;\n  if (drawnLength >= 1000) {\n    // if over 1000 meters, upgrade metric\n    metricMeasurement = drawnLength / 1000;\n    metricUnits = \"km\";\n    metricFormat = \"0.00\";\n  }\n\n  standardMeasurement = drawnLength * 3.28084;\n  if (standardMeasurement >= 5280) {\n    // if over 5280 feet, upgrade standard\n    standardMeasurement /= 5280;\n    standardUnits = \"mi\";\n    standardFormat = \"0.00\";\n  }\n\n  const displayMeasurements = {\n    metric: `${numeral(metricMeasurement).format(metricFormat)} ${metricUnits}`,\n    standard: `${numeral(standardMeasurement).format(\n      standardFormat\n    )} ${standardUnits}`,\n  };\n  return displayMeasurements;\n}\n\nfunction circleFromTwoVertexLineString(geojson) {\n  const center = geojson.geometry.coordinates[0];\n  const radiusInKm = turfLength(geojson);\n\n  return circle(center, radiusInKm);\n}\n\nconst CircleMode = {\n  ...MapboxDraw.modes.draw_line_string,\n\n  clickAnywhere: function (state, e) {\n    // this ends the drawing after the user creates a second point, triggering this.onStop\n    if (state.currentVertexPosition === 1) {\n      state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\n      return this.changeMode(\"simple_select\", { featureIds: [state.line.id] });\n    }\n\n    state.line.updateCoordinate(\n      state.currentVertexPosition,\n      e.lngLat.lng,\n      e.lngLat.lat\n    );\n    if (state.direction === \"forward\") {\n      state.currentVertexPosition += 1;\n      state.line.updateCoordinate(\n        state.currentVertexPosition,\n        e.lngLat.lng,\n        e.lngLat.lat\n      );\n    } else {\n      state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\n    }\n\n    return null;\n  },\n\n  onStop: function (state) {\n    this.activateUIButton();\n\n    // check to see if we've deleted this feature\n    if (this.getFeature(state.line.id) === undefined) return;\n\n    // remove last added coordinate\n    state.line.removeCoordinate(\"0\");\n    if (state.line.isValid()) {\n      const lineGeoJson = state.line.toGeoJSON();\n      const circleFeature = circleFromTwoVertexLineString(lineGeoJson);\n\n      this.map.fire(\"draw.create\", {\n        features: [circleFeature],\n      });\n    } else {\n      this.deleteFeature([state.line.id], { silent: true });\n      this.changeMode(\"simple_select\", {}, { silent: true });\n    }\n  },\n\n  toDisplayFeatures: function (state, geojson, display) {\n    // Only render the line if it has at least one real coordinate\n    if (geojson.geometry.coordinates.length < 2) return null;\n\n    display({\n      type: \"Feature\",\n      properties: {\n        active: \"true\",\n      },\n      geometry: {\n        type: \"Point\",\n        coordinates: geojson.geometry.coordinates[0],\n      },\n    });\n\n    // displays the line as it is drawn\n    geojson.properties.active = \"true\";\n    display(geojson);\n\n    const displayMeasurements = getDisplayMeasurements(geojson);\n\n    // create custom feature for the current pointer position\n    const currentVertex = {\n      type: \"Feature\",\n      properties: {\n        meta: \"currentPosition\",\n        radius: `${displayMeasurements.metric}`,\n        parent: state.line.id,\n      },\n      geometry: {\n        type: \"Point\",\n        coordinates: geojson.geometry.coordinates[1],\n      },\n    };\n\n    display(currentVertex);\n\n    const circleFeature = circleFromTwoVertexLineString(geojson);\n\n    circleFeature.properties = {\n      active: \"true\",\n    };\n\n    display(circleFeature);\n\n    return null;\n  },\n};\n\nexport default CircleMode;\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nconst theme = MapboxDraw.lib.theme;\n\nconst modifiedDefaultStyles = theme.map((defaultStyle) => {\n  if (defaultStyle.id === \"gl-draw-line-inactive\") {\n    return {\n      ...defaultStyle,\n      filter: [...defaultStyle.filter, [\"!=\", \"user_isSnapGuide\", \"true\"]],\n    };\n  }\n\n  return defaultStyle;\n});\n\nconst drawStyles = [\n  {\n    id: \"gl-draw-line-inactive\",\n    type: \"line\",\n    filter: [\"!=\", \"user_isSnapGuide\", \"true\"],\n  },\n  {\n    id: \"gl-draw-polygon-fill-active\",\n    type: \"fill\",\n    filter: [\"all\", [\"==\", \"active\", \"true\"], [\"==\", \"$type\", \"Polygon\"]],\n    paint: {\n      \"fill-color\": \"#fbb03b\",\n      \"fill-outline-color\": \"#fbb03b\",\n      \"fill-opacity\": 0.1,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-midpoint\",\n    type: \"circle\",\n    filter: [\"all\", [\"==\", \"$type\", \"Point\"], [\"==\", \"meta\", \"midpoint\"]],\n    paint: {\n      \"circle-radius\": 3,\n      \"circle-color\": \"#fbb03b\",\n    },\n  },\n  {\n    id: \"gl-draw-polygon-stroke-inactive\",\n    type: \"line\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Polygon\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#3bb2d0\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-stroke-active\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"active\", \"true\"], [\"==\", \"$type\", \"Polygon\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#fbb03b\",\n      \"line-dasharray\": [0.2, 2],\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-line-inactive\",\n    type: \"line\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"LineString\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#3bb2d0\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-line-active\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"$type\", \"LineString\"], [\"==\", \"active\", \"true\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#fbb03b\",\n      \"line-dasharray\": [0.2, 2],\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-and-line-vertex-stroke-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"vertex\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 5,\n      \"circle-color\": \"#fff\",\n    },\n  },\n  {\n    id: \"gl-draw-polygon-and-line-vertex-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"vertex\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 3,\n      \"circle-color\": \"#fbb03b\",\n    },\n  },\n  {\n    id: \"gl-draw-point-point-stroke-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"==\", \"meta\", \"feature\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 5,\n      \"circle-opacity\": 1,\n      \"circle-color\": \"#fff\",\n    },\n  },\n  {\n    id: \"gl-draw-point-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"==\", \"meta\", \"feature\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 3,\n      \"circle-color\": \"#3bb2d0\",\n    },\n  },\n  {\n    id: \"gl-draw-point-stroke-active\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"Point\"],\n      [\"==\", \"active\", \"true\"],\n      [\"!=\", \"meta\", \"midpoint\"],\n    ],\n    paint: {\n      \"circle-radius\": 7,\n      \"circle-color\": \"#fff\",\n    },\n  },\n  {\n    id: \"gl-draw-point-active\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"meta\", \"midpoint\"],\n      [\"==\", \"active\", \"true\"],\n    ],\n    paint: {\n      \"circle-radius\": 5,\n      \"circle-color\": \"#fbb03b\",\n    },\n  },\n  {\n    id: \"gl-draw-polygon-fill-static\",\n    type: \"fill\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"Polygon\"]],\n    paint: {\n      \"fill-color\": \"#404040\",\n      \"fill-outline-color\": \"#404040\",\n      \"fill-opacity\": 0.1,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-stroke-static\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"Polygon\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#404040\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-line-static\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"LineString\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#404040\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-point-static\",\n    type: \"circle\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"Point\"]],\n    paint: {\n      \"circle-radius\": 5,\n      \"circle-color\": \"#404040\",\n    },\n  },\n  {\n    id: \"gl-draw-symbol\",\n    type: \"symbol\",\n    layout: {\n      \"text-line-height\": 1.1,\n      \"text-size\": 15,\n      \"text-font\": [\"DIN Pro Medium\", \"Arial Unicode MS Regular\"],\n      \"text-anchor\": \"left\",\n      \"text-justify\": \"left\",\n      \"text-offset\": [0.8, 0.8],\n      \"text-field\": [\"get\", \"radius\"],\n      \"text-max-width\": 7,\n    },\n    paint: {\n      \"text-color\": \"hsl(0, 0%, 95%)\",\n      \"text-halo-color\": \"hsl(0, 5%, 0%)\",\n      \"text-halo-width\": 1,\n      \"text-halo-blur\": 1,\n    },\n    filter: [\"==\", \"meta\", \"currentPosition\"],\n  },\n  {\n    id: \"guide\",\n    type: \"line\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"LineString\"],\n      [\"==\", \"user_isSnapGuide\", \"true\"],\n    ],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#c00c00\",\n      \"line-width\": 1,\n      \"line-dasharray\": [5, 5],\n    },\n  },\n  {\n    id: \"gl-draw-polygon-fill-inactive\",\n    type: \"fill\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Polygon\"],\n      [\"!=\", \"user_type\", \"overlay\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"fill-color\": \"#3bb2d0\",\n      \"fill-outline-color\": \"#3bb2d0\",\n      \"fill-opacity\": 0.2,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-fill-active\",\n    type: \"fill\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"true\"],\n      [\"==\", \"$type\", \"Polygon\"],\n      [\"!=\", \"user_type\", \"overlay\"],\n    ],\n    paint: {\n      \"fill-color\": \"#fbb03b\",\n      \"fill-outline-color\": \"#fbb03b\",\n      \"fill-opacity\": 0.2,\n    },\n  },\n\n  {\n    id: \"gl-draw-overlay-polygon-fill-inactive\",\n    type: \"fill\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Polygon\"],\n      [\"==\", \"user_type\", \"overlay\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"fill-color\": \"#3bb2d0\",\n      \"fill-outline-color\": \"#3bb2d0\",\n      \"fill-opacity\": 0.01,\n    },\n  },\n  {\n    id: \"gl-draw-overlay-polygon-fill-active\",\n    type: \"fill\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"true\"],\n      [\"==\", \"$type\", \"Polygon\"],\n      [\"==\", \"user_type\", \"overlay\"],\n    ],\n    paint: {\n      \"fill-color\": \"#fbb03b\",\n      \"fill-outline-color\": \"#fbb03b\",\n      \"fill-opacity\": 0.01,\n    },\n  },\n\n  {\n    id: \"gl-draw-polygon-stroke-inactive\",\n    type: \"line\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Polygon\"],\n      [\"!=\", \"user_type\", \"overlay\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#3bb2d0\",\n      \"line-width\": 2,\n    },\n  },\n\n  {\n    id: \"gl-draw-polygon-stroke-active\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"active\", \"true\"], [\"==\", \"$type\", \"Polygon\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#fbb03b\",\n      \"line-dasharray\": [0.2, 2],\n      \"line-width\": 2,\n    },\n  },\n\n  {\n    id: \"gl-draw-polygon-midpoint\",\n    type: \"circle\",\n    filter: [\"all\", [\"==\", \"$type\", \"Point\"], [\"==\", \"meta\", \"midpoint\"]],\n    paint: {\n      \"circle-radius\": 3,\n      \"circle-color\": \"#fbb03b\",\n    },\n  },\n\n  {\n    id: \"gl-draw-line-inactive\",\n    type: \"line\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"LineString\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#3bb2d0\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-line-active\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"$type\", \"LineString\"], [\"==\", \"active\", \"true\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#fbb03b\",\n      \"line-dasharray\": [0.2, 2],\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-and-line-vertex-stroke-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"vertex\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 4,\n      \"circle-color\": \"#fff\",\n    },\n  },\n  {\n    id: \"gl-draw-polygon-and-line-vertex-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"vertex\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 2,\n      \"circle-color\": \"#fbb03b\",\n    },\n  },\n\n  {\n    id: \"gl-draw-polygon-and-line-vertex-scale-icon\",\n    type: \"symbol\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"vertex\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"mode\", \"static\"],\n      [\"has\", \"heading\"],\n    ],\n    layout: {\n      \"icon-image\": \"scale\",\n      \"icon-allow-overlap\": true,\n      \"icon-ignore-placement\": true,\n      \"icon-rotation-alignment\": \"map\",\n      \"icon-rotate\": [\"get\", \"heading\"],\n    },\n    paint: {\n      \"icon-opacity\": 1.0,\n      \"icon-opacity-transition\": {\n        delay: 0,\n        duration: 0,\n      },\n    },\n  },\n\n  {\n    id: \"gl-draw-point-point-stroke-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"==\", \"meta\", \"feature\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 5,\n      \"circle-opacity\": 1,\n      \"circle-color\": \"#fff\",\n    },\n  },\n  {\n    id: \"gl-draw-point-inactive\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"active\", \"false\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"==\", \"meta\", \"feature\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 3,\n      \"circle-color\": \"#3bb2d0\",\n    },\n  },\n  {\n    id: \"gl-draw-point-stroke-active\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"Point\"],\n      [\"==\", \"active\", \"true\"],\n      [\"!=\", \"meta\", \"midpoint\"],\n    ],\n    paint: {\n      \"circle-radius\": 4,\n      \"circle-color\": \"#fff\",\n    },\n  },\n  {\n    id: \"gl-draw-point-active\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"meta\", \"midpoint\"],\n      [\"==\", \"active\", \"true\"],\n    ],\n    paint: {\n      \"circle-radius\": 2,\n      \"circle-color\": \"#fbb03b\",\n    },\n  },\n  {\n    id: \"gl-draw-polygon-fill-static\",\n    type: \"fill\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"Polygon\"]],\n    paint: {\n      \"fill-color\": \"#404040\",\n      \"fill-outline-color\": \"#404040\",\n      \"fill-opacity\": 0.1,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-stroke-static\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"Polygon\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#404040\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-line-static\",\n    type: \"line\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"LineString\"]],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#404040\",\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-point-static\",\n    type: \"circle\",\n    filter: [\"all\", [\"==\", \"mode\", \"static\"], [\"==\", \"$type\", \"Point\"]],\n    paint: {\n      \"circle-radius\": 5,\n      \"circle-color\": \"#404040\",\n    },\n  },\n\n  // {\n  //     'id': 'gl-draw-polygon-rotate-point',\n  //     'type': 'circle',\n  //     'filter': ['all',\n  //         ['==', '$type', 'Point'],\n  //         ['==', 'meta', 'rotate_point']],\n  //     'paint': {\n  //         'circle-radius': 5,\n  //         'circle-color': '#fbb03b'\n  //     }\n  // },\n\n  {\n    id: \"gl-draw-line-rotate-point\",\n    type: \"line\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"midpoint\"],\n      [\"==\", \"icon\", \"rotate\"],\n      [\"==\", \"$type\", \"LineString\"],\n      [\"!=\", \"mode\", \"static\"],\n      // ['==', 'active', 'true']\n    ],\n    layout: {\n      \"line-cap\": \"round\",\n      \"line-join\": \"round\",\n    },\n    paint: {\n      \"line-color\": \"#fbb03b\",\n      \"line-dasharray\": [0.2, 2],\n      \"line-width\": 2,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-rotate-point-stroke\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"midpoint\"],\n      [\"==\", \"icon\", \"rotate\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 4,\n      \"circle-color\": \"#fff\",\n    },\n  },\n  {\n    id: \"gl-draw-polygon-rotate-point\",\n    type: \"circle\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"midpoint\"],\n      [\"==\", \"icon\", \"rotate\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    paint: {\n      \"circle-radius\": 2,\n      \"circle-color\": \"#fbb03b\",\n    },\n  },\n  {\n    id: \"gl-draw-polygon-rotate-point-icon\",\n    type: \"symbol\",\n    filter: [\n      \"all\",\n      [\"==\", \"meta\", \"midpoint\"],\n      [\"==\", \"icon\", \"rotate\"],\n      [\"==\", \"$type\", \"Point\"],\n      [\"!=\", \"mode\", \"static\"],\n    ],\n    layout: {\n      \"icon-image\": \"rotate\",\n      \"icon-allow-overlap\": true,\n      \"icon-ignore-placement\": true,\n      \"icon-rotation-alignment\": \"map\",\n      \"icon-rotate\": [\"get\", \"heading\"],\n    },\n    paint: {\n      \"icon-opacity\": 1.0,\n      \"icon-opacity-transition\": {\n        delay: 0,\n        duration: 0,\n      },\n    },\n  },\n  {\n    id: \"gl-draw-line-active-length\",\n    type: \"symbol\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"LineString\"],\n      [\"==\", \"active\", \"true\"],\n      [\"==\", \"user_has_length\", \"true\"],\n    ],\n    layout: {\n      \"symbol-placement\": \"line-center\",\n      \"text-rotation-alignment\": \"map\",\n      \"text-pitch-alignment\": \"viewport\",\n      \"text-max-angle\": 30,\n      \"text-max-width\": 300,\n      \"text-field\": \"{user_length} {user_length_unit}\",\n      \"text-size\": [\"interpolate\", [\"linear\"], [\"zoom\"], 8, 8, 10, 12, 16, 16],\n      \"text-allow-overlap\": false,\n    },\n    paint: {\n      \"text-opacity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 8, 1],\n      \"text-color\": \"#000\",\n      \"text-halo-color\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        2,\n        \"#ffffff\",\n        3,\n        \"#ffffff\",\n      ],\n      \"text-halo-width\": 0.3,\n      \"text-halo-blur\": 1,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-active-length\",\n    type: \"symbol\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"Polygon\"],\n      [\"==\", \"active\", \"true\"],\n      [\"==\", \"user_has_length\", \"true\"],\n    ],\n    layout: {\n      \"symbol-placement\": \"line-center\",\n      \"text-rotation-alignment\": \"map\",\n      \"text-pitch-alignment\": \"viewport\",\n      \"text-max-angle\": 30,\n      \"text-max-width\": 300,\n      \"text-field\": \"{user_length} {user_length_unit}\",\n      \"text-size\": [\"interpolate\", [\"linear\"], [\"zoom\"], 8, 8, 10, 12, 16, 16],\n      \"text-allow-overlap\": false,\n    },\n    paint: {\n      \"text-opacity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 8, 1],\n      \"text-color\": \"#000\",\n      \"text-halo-color\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        2,\n        \"#ffffff\",\n        3,\n        \"#ffffff\",\n      ],\n      \"text-halo-width\": 0.3,\n      \"text-halo-blur\": 1,\n    },\n  },\n  {\n    id: \"gl-draw-polygon-active-area\",\n    type: \"symbol\",\n    filter: [\n      \"all\",\n      [\"==\", \"$type\", \"Polygon\"],\n      [\"==\", \"active\", \"true\"],\n      [\"==\", \"user_has_area\", \"true\"],\n    ],\n    layout: {\n      \"symbol-placement\": \"line\",\n      \"text-rotation-alignment\": \"map\",\n      \"text-pitch-alignment\": \"viewport\",\n      \"text-max-angle\": 30,\n      \"text-max-width\": 300,\n      \"text-field\": \"{user_area} meters^2\",\n      \"text-size\": [\"interpolate\", [\"linear\"], [\"zoom\"], 8, 8, 10, 12, 16, 16],\n      \"text-allow-overlap\": false,\n    },\n    paint: {\n      \"text-opacity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 8, 1],\n      \"text-color\": \"#000\",\n      \"text-halo-color\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"zoom\"],\n        2,\n        \"#ffffff\",\n        3,\n        \"#ffffff\",\n      ],\n      \"text-halo-width\": 0.3,\n      \"text-halo-blur\": 1,\n    },\n  },\n];\n\nexport default drawStyles;\n","import { default as CircleMode } from \"./mode.js\";\nimport { default as drawStyles } from \"./customDrawStyles.js\";\n\nexport default { CircleMode };\nexport  { drawStyles };\n"],"names":["earthRadius","factors","feature","geom","properties","options","feat","point","coordinates","isNumber","polygon","_i","coordinates_1","ring","j","lineString","radiansToLength","radians","units","factor","lengthToRadians","distance","radiansToDegrees","degrees","degreesToRadians","num","getCoord","coord","destination","origin","bearing","coordinates1","longitude1","latitude1","bearingRad","latitude2","longitude2","lng","lat","circle","center","radius","steps","i","t","e","module","this","o","r","a","s","n","c","l","d","p","f","h","g","y","v","m","_","b","E","T","C","O","S","I","x","M","L","u","N","A","P","F","w","R","k","D","U","V","B","G","J","z","Y","$","q","H","X","Z","W","K","Q","tt","et","nt","ot","rt","it","at","st","ut","ct","lt","dt","pt","ft","ht","gt","yt","vt","mt","_t","bt","Et","Tt","Ct","Ot","St","It","xt","Mt","Lt","Nt","At","Pt","Ft","wt","Rt","Ut","kt","jt","Vt","Dt","Bt","Gt","Jt","zt","Yt","$t","qt","Ht","Zt","Wt","Qt","te","ee","ne","oe","re","ie","ae","se","ue","ce","le","de","pe","fe","global","he","ge","ye","ve","me","_e","from","to","coordinates2","dLat","dLon","lat1","lat2","coordEach","geojson","callback","excludeWrapCoord","geometry","stopG","coords","geometryMaybeCollection","wrapShrink","coordIndex","isGeometryCollection","type","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","geomEach","featureProperties","featureBBox","featureId","flattenEach","bbox","id","coordinate","segmentEach","segmentIndex","previousCoords","previousFeatureIndex","previousMultiIndex","prevGeomIndex","currentCoord","featureIndexCoord","multiPartIndexCoord","currentSegment","segmentReduce","initialValue","previousValue","started","length","segment","factory","numeral","VERSION","formats","locales","defaults","Numeral","input","number","value","kind","unformatFunction","regexp","obj","format","roundingFunction","locale","negP","optDec","leadingCount","abbr","trillion","billion","million","thousand","decimal","neg","abbrForce","abs","int","precision","signed","thousands","output","string","stringOriginal","abbreviations","abbreviation","search","subString","start","array","len","parts","args","accum","next","mn","maxDecimals","optionals","splitValue","minDecimals","boundedPrecision","optionalsRegExp","power","key","property","name","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","localeData","temp","inputString","formatFunction","corrFactor","cback","curr","currI","space","binary","allSuffixes","item","unformatRegex","bytes","suffix","min","max","bytesMultiplier","symbols","symbol","exponential","ordinal","hours","minutes","seconds","timeArray","getDisplayMeasurements","drawnLength","turfLength","metricUnits","metricFormat","metricMeasurement","standardUnits","standardFormat","standardMeasurement","circleFromTwoVertexLineString","radiusInKm","CircleMode","MapboxDraw","state","lineGeoJson","circleFeature","display","currentVertex","theme","defaultStyle","drawStyles","index"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}